"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdateapp"]("LumaView",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ \"./node_modules/core-js/modules/es.array.includes.js\");\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_SharedFolderItem_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/SharedFolderItem.vue */ \"./src/components/SharedFolderItem.vue\");\n/* harmony import */ var _components_ItemModal_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ItemModal.vue */ \"./src/components/ItemModal.vue\");\n/* harmony import */ var _components_FilterBar_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/FilterBar.vue */ \"./src/components/FilterBar.vue\");\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    shared_folder_path: String\n  },\n  components: {\n    SharedFolderItem: _components_SharedFolderItem_vue__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    ItemModal: _components_ItemModal_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    FilterBar: _components_FilterBar_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  },\n  data() {\n    return {\n      shared_folder: undefined,\n      show_backtotop_btn: false,\n      current_scroll: 0,\n      show_filter_sort_pane: false,\n      sort_order: \"date_uploaded\",\n      search_str: \"\",\n      author_path_filter: \"\",\n      keywords_filter: [],\n      group_mode: \"day\"\n\n      // sort_order: localStorage.getItem(\"sort_order\") || \"date_uploaded\",\n      // search_str: localStorage.getItem(\"search_str\") || \"\",\n      // author_path_filter: localStorage.getItem(\"author_path_filter\") || \"\",\n      // // not working\n      // keywords_filter: localStorage.getItem(\"keywords_filter\") ? JSON.parse(localStorage.getItem(\"keywords_filter\")) : [],\n      // group_mode: localStorage.getItem(\"group_mode\") || \"day\",\n    };\n  },\n\n  created() {},\n  async mounted() {\n    this.shared_folder = await this.$api.getFolder({\n      path: this.shared_folder_path\n    });\n    this.$api.join({\n      room: this.shared_folder_path\n    });\n  },\n  beforeDestroy() {},\n  watch: {\n    // sort_order() {\n    //   localStorage.setItem(\"sort_order\", this.sort_order);\n    // },\n    // search_str() {\n    //   localStorage.setItem(\"search_str\", this.search_str);\n    // },\n    // author_path_filter() {\n    //   localStorage.setItem(\"author_path_filter\", this.author_path_filter);\n    // },\n    // keywords_filter() {\n    //   localStorage.setItem(\n    //     \"keywords_filter\",\n    //     JSON.stringify(this.keywords_filter)\n    //   );\n    // },\n    // group_mode() {\n    //   localStorage.setItem(\"group_mode\", this.group_mode);\n    // },\n  },\n  computed: {\n    opened_file() {\n      if (!this.$route.query?.file) return false;\n      return this.shared_files.find(si => this.getFilename(si.$path) === this.$route.query.file);\n    },\n    opened_file_position_index() {\n      if (!this.opened_file) return false;\n      return this.filtered_shared_files.findIndex(fm => fm.$path === this.opened_file.$path);\n    },\n    opened_file_sequence() {\n      return `${this.opened_file_position_index + 1}/${this.filtered_shared_files.length}`;\n    },\n    opened_file_position_in_list() {\n      const opened_file_index = this.opened_file_position_index;\n      if (opened_file_index === false) return \"none\";\n      if (this.filtered_shared_files.length === 1) return \"alone\";\n      if (opened_file_index === 0) return \"first\";\n      if (opened_file_index === this.filtered_shared_files.length - 1) return \"last\";\n      return \"none\";\n    },\n    shared_files() {\n      if (!this.shared_folder?.$files) return [];\n      const _all_medias = JSON.parse(JSON.stringify(this.shared_folder.$files));\n      const _stacks_of_medias = _all_medias.filter(m => m.belongs_to_stack);\n\n      // remove medias part of stacks\n      const _medias_not_in_stacks = _all_medias.reduce((acc, m) => {\n        // if (!m.date_created_corrected)\n        //   m.date_created_corrected = m.$date_created || m.$date_uploaded;\n\n        if (m.belongs_to_stack) return acc;\n        if (m.is_stack && m.stack_files_metas) {\n          m._stack_files = m.stack_files_metas.map(sfm => _stacks_of_medias.find(sm => sm.$path.endsWith(\"/\" + sfm)));\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n        }\n\n        acc.push(m);\n        return acc;\n      }, []);\n      _medias_not_in_stacks.sort((a, b) => +new Date(b.$date_uploaded) - +new Date(a.$date_uploaded));\n      return _medias_not_in_stacks;\n    },\n    filtered_shared_files() {\n      return this.shared_files.filter(f => {\n        if (this.author_path_filter) if (!f.$admins || !f.$admins.includes(this.author_path_filter)) return false;\n        if (this.keywords_filter.length > 0) {\n          if (f.keywords && Array.isArray(f.keywords)) {\n            return !this.keywords_filter.some(kwf => !f.keywords.includes(kwf));\n          }\n          return false;\n        }\n        if (this.search_str) {\n          return f.title && f.title.toLowerCase().includes(this.search_str.toLowerCase()) || f.description && f.description.toLowerCase().includes(this.search_str.toLowerCase()) || f.$content && f.$content.toLowerCase().includes(this.search_str.toLowerCase());\n        }\n        return true;\n      });\n    },\n    grouped_files() {\n      let order_props;\n      if (this.sort_order === \"date_created\") order_props = [\"date_created_corrected\", \"$date_created\", \"$date_uploaded\"];else if (this.sort_order === \"date_uploaded\") order_props = [\"$date_uploaded\"];\n      return this.groupFilesBy(this.filtered_shared_files, order_props, this.group_mode);\n    },\n    available_keywords() {\n      const all_kw = this.filtered_shared_files.reduce((acc, f) => {\n        if (f.keywords && Array.isArray(f.keywords)) {\n          f.keywords.map(kw => {\n            const item = acc.find(_kw => _kw.title === kw);\n            if (item) item.count += 1;else acc.push({\n              title: kw,\n              count: 1\n            });\n\n            // if (!acc[kw]) acc[kw] = 1;\n            // else acc[kw] += 1;\n          });\n        }\n\n        return acc;\n      }, []);\n      return all_kw.sort((a, b) => {\n        return b.count - a.count;\n      });\n    }\n  },\n  methods: {\n    updatedScroll() {\n      this.current_scroll = this.$el.scrollTop;\n    },\n    scrollTop() {\n      this.$el.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    openFile(path) {\n      let query = Object.assign({}, this.$route.query) || {};\n      const meta_filename = this.getFilename(path);\n      query.file = meta_filename;\n      this.$router.push({\n        query\n      });\n    },\n    closeFile() {\n      let query = Object.assign({}, this.$route.query) || {};\n      delete query.file;\n      this.$router.push({\n        query\n      });\n    },\n    navMedia(dir) {\n      const index = this.opened_file_position_index;\n      const new_media = this.filtered_shared_files[index + dir];\n      if (new_media) this.openFile(new_media.$path);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js&\n");

/***/ })

});