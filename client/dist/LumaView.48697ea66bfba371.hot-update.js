"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdateapp"]("LumaView",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ \"./node_modules/core-js/modules/es.array.includes.js\");\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_SharedFolderItem_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/SharedFolderItem.vue */ \"./src/components/SharedFolderItem.vue\");\n/* harmony import */ var _components_ItemModal_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ItemModal.vue */ \"./src/components/ItemModal.vue\");\n/* harmony import */ var _components_FilterBar_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/FilterBar.vue */ \"./src/components/FilterBar.vue\");\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    shared_folder_path: String\n  },\n  components: {\n    SharedFolderItem: _components_SharedFolderItem_vue__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    ItemModal: _components_ItemModal_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    FilterBar: _components_FilterBar_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  },\n  data() {\n    return {\n      shared_folder: undefined,\n      show_backtotop_btn: false,\n      current_scroll: 0,\n      show_filter_sort_pane: false,\n      sort_order: \"date_uploaded\",\n      search_str: \"\",\n      filetype_filter: \"all\",\n      author_path_filter: \"\",\n      keywords_filter: [],\n      group_mode: \"day\"\n\n      // sort_order: localStorage.getItem(\"sort_order\") || \"date_uploaded\",\n      // search_str: localStorage.getItem(\"search_str\") || \"\",\n      // author_path_filter: localStorage.getItem(\"author_path_filter\") || \"\",\n      // // not working\n      // keywords_filter: localStorage.getItem(\"keywords_filter\") ? JSON.parse(localStorage.getItem(\"keywords_filter\")) : [],\n      // group_mode: localStorage.getItem(\"group_mode\") || \"day\",\n    };\n  },\n\n  created() {},\n  async mounted() {\n    this.shared_folder = await this.$api.getFolder({\n      path: this.shared_folder_path\n    });\n    this.$api.join({\n      room: this.shared_folder_path\n    });\n  },\n  beforeDestroy() {},\n  watch: {\n    // sort_order() {\n    //   localStorage.setItem(\"sort_order\", this.sort_order);\n    // },\n    // search_str() {\n    //   localStorage.setItem(\"search_str\", this.search_str);\n    // },\n    // author_path_filter() {\n    //   localStorage.setItem(\"author_path_filter\", this.author_path_filter);\n    // },\n    // keywords_filter() {\n    //   localStorage.setItem(\n    //     \"keywords_filter\",\n    //     JSON.stringify(this.keywords_filter)\n    //   );\n    // },\n    // group_mode() {\n    //   localStorage.setItem(\"group_mode\", this.group_mode);\n    // },\n  },\n  computed: {\n    opened_file() {\n      if (!this.$route.query?.file) return false;\n      return this.shared_files.find(si => this.getFilename(si.$path) === this.$route.query.file);\n    },\n    opened_file_position_index() {\n      if (!this.opened_file) return false;\n      return this.filtered_shared_files.findIndex(fm => fm.$path === this.opened_file.$path);\n    },\n    opened_file_sequence() {\n      return `${this.opened_file_position_index + 1}/${this.filtered_shared_files.length}`;\n    },\n    opened_file_position_in_list() {\n      const opened_file_index = this.opened_file_position_index;\n      if (opened_file_index === false) return \"none\";\n      if (this.filtered_shared_files.length === 1) return \"alone\";\n      if (opened_file_index === 0) return \"first\";\n      if (opened_file_index === this.filtered_shared_files.length - 1) return \"last\";\n      return \"none\";\n    },\n    shared_files() {\n      if (!this.shared_folder?.$files) return [];\n      const _all_medias = JSON.parse(JSON.stringify(this.shared_folder.$files));\n      const _stacks_of_medias = _all_medias.filter(m => m.belongs_to_stack);\n\n      // remove medias part of stacks\n      const _medias_not_in_stacks = _all_medias.reduce((acc, m) => {\n        // if (!m.date_created_corrected)\n        //   m.date_created_corrected = m.$date_created || m.$date_uploaded;\n\n        if (m.belongs_to_stack) return acc;\n        if (m.is_stack && m.stack_files_metas) {\n          m._stack_files = m.stack_files_metas.map(sfm => _stacks_of_medias.find(sm => sm.$path.endsWith(\"/\" + sfm)));\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n          // m._stack_files = m._stack_files\n          //   .concat(m._stack_files)\n          //   .concat(m._stack_files);\n        }\n\n        acc.push(m);\n        return acc;\n      }, []);\n      _medias_not_in_stacks.sort((a, b) => +new Date(b.$date_uploaded) - +new Date(a.$date_uploaded));\n      return _medias_not_in_stacks;\n    },\n    filtered_shared_files() {\n      return this.shared_files.filter(f => {\n        if (this.author_path_filter) if (!f.$admins || !f.$admins.includes(this.author_path_filter)) return false;\n        if (this.keywords_filter.length > 0) {\n          if (!f.keywords || !Array.isArray(f.keywords)) return false;\n          if (this.keywords_filter.some(kwf => !f.keywords.includes(kwf))) return false;\n        }\n        if (this.filetype_filter !== \"all\") if (!this.fileOrStackContainsType(f, this.filetype_filter)) return false;\n        if (this.search_str) {\n          if (f.title && f.title.toLowerCase().includes(this.search_str.toLowerCase()) || f.description && f.description.toLowerCase().includes(this.search_str.toLowerCase()) || f.$content && f.$content.toLowerCase().includes(this.search_str.toLowerCase())) return true;else return false;\n        }\n        return true;\n      });\n    },\n    grouped_files() {\n      let order_props;\n      if (this.sort_order === \"date_created\") order_props = [\"date_created_corrected\", \"$date_created\", \"$date_uploaded\"];else if (this.sort_order === \"date_uploaded\") order_props = [\"$date_uploaded\"];\n      return this.groupFilesBy(this.filtered_shared_files, order_props, this.group_mode);\n    },\n    available_keywords() {\n      const all_kw = this.filtered_shared_files.reduce((acc, f) => {\n        if (f.keywords && Array.isArray(f.keywords)) {\n          f.keywords.map(kw => {\n            const item = acc.find(_kw => _kw.title === kw);\n            if (item) item.count += 1;else acc.push({\n              title: kw,\n              count: 1\n            });\n\n            // if (!acc[kw]) acc[kw] = 1;\n            // else acc[kw] += 1;\n          });\n        }\n\n        return acc;\n      }, []);\n      return all_kw.sort((a, b) => {\n        return b.count - a.count;\n      });\n    }\n  },\n  methods: {\n    updatedScroll() {\n      this.current_scroll = this.$el.scrollTop;\n    },\n    scrollTop() {\n      this.$el.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    openFile(path) {\n      let query = Object.assign({}, this.$route.query) || {};\n      const meta_filename = this.getFilename(path);\n      query.file = meta_filename;\n      this.$router.push({\n        query\n      });\n    },\n    closeFile() {\n      let query = Object.assign({}, this.$route.query) || {};\n      delete query.file;\n      this.$router.push({\n        query\n      });\n    },\n    navMedia(dir) {\n      const index = this.opened_file_position_index;\n      const new_media = this.filtered_shared_files[index + dir];\n      if (new_media) this.openFile(new_media.$path);\n    },\n    fileOrStackContainsType(f, filetype) {\n      if (f.$type && f.$type === filetype) return true;\n      // if one of the media in the stack matches\n      if (f.is_stack && f._stack_files.some(f => f && f.$type === filetype)) return true;\n      return false;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0zN1swXS5ydWxlc1swXS51c2VbMF0hLi9ub2RlX21vZHVsZXMvQHZ1ZS92dWUtbG9hZGVyLXYxNS9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3NyYy9jb21wb25lbnRzL1NoYXJlZEZvbGRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBSUE7QUFDQTtBQVlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcHAvc3JjL2NvbXBvbmVudHMvU2hhcmVkRm9sZGVyLnZ1ZT85ZWIxIl0sInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cIl9zaGFyZWRGb2xkZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwiX3NwaW5uZXJcIiB2LWlmPVwiIXNoYXJlZF9mb2xkZXJcIiBrZXk9XCJsb2FkZXJcIj5cbiAgICAgIDxMb2FkZXJTcGlubmVyIC8+XG4gICAgPC9kaXY+XG4gICAgPGRpdiB2LWVsc2UgY2xhc3M9XCJfc2hhcmVkRm9sZGVyLS1jb250ZW50XCIgQHNjcm9sbD1cInVwZGF0ZWRTY3JvbGxcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJfbWFpbkNvbnRlbnRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIl90b3BiYXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiX3RvcGJhci0tY29udGVudFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIl90aXRsZVwiPlxuICAgICAgICAgICAgICA8dHJhbnNpdGlvbiBuYW1lPVwic2hvd0JUVEJ0blwiPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgQGNsaWNrPVwic2Nyb2xsVG9wXCJcbiAgICAgICAgICAgICAgICAgIHYtaWY9XCJjdXJyZW50X3Njcm9sbCA+IDEwMFwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPHNsLWljb24gbmFtZT1cImFycm93LXVwLWNpcmNsZS1maWxsXCIgLz5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC90cmFuc2l0aW9uPlxuICAgICAgICAgICAgICB7eyAkdChcInNoYXJlZF9zcGFjZV9hcmNoaXZlXCIpIH19XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJfZmlsdGVyU29ydEJ0blwiPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJ1LWJ1dHRvbkxpbmtcIlxuICAgICAgICAgICAgICAgIDpjbGFzcz1cIntcbiAgICAgICAgICAgICAgICAgICdpcy0tYWN0aXZlJzogc2hvd19maWx0ZXJfc29ydF9wYW5lLFxuICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cInNob3dfZmlsdGVyX3NvcnRfcGFuZSA9ICFzaG93X2ZpbHRlcl9zb3J0X3BhbmVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3sgJHQoXCJmaWx0ZXJfc29ydFwiKSB9fVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJfZmlsZXNJbmRpY2F0b3JcIj5cbiAgICAgICAgICAgIHt7ICR0KFwiaXRlbXNcIikgfX0gPSB7eyBmaWx0ZXJlZF9zaGFyZWRfZmlsZXMubGVuZ3RoIH19XG4gICAgICAgICAgICA8dGVtcGxhdGVcbiAgICAgICAgICAgICAgdi1pZj1cImZpbHRlcmVkX3NoYXJlZF9maWxlcy5sZW5ndGggIT09IHNoYXJlZF9maWxlcy5sZW5ndGhcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAve3sgc2hhcmVkX2ZpbGVzLmxlbmd0aCB9fVxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHRyYW5zaXRpb24gbmFtZT1cInNjYWxlSW5GYWRlX2Zhc3RcIiBtb2RlPVwib3V0LWluXCI+XG4gICAgICAgICAgPEl0ZW1Nb2RhbFxuICAgICAgICAgICAgdi1pZj1cIm9wZW5lZF9maWxlXCJcbiAgICAgICAgICAgIDprZXk9XCJvcGVuZWRfZmlsZS4kcGF0aFwiXG4gICAgICAgICAgICA6ZmlsZT1cIm9wZW5lZF9maWxlXCJcbiAgICAgICAgICAgIDpvcGVuZWRfZmlsZV9zZXF1ZW5jZT1cIm9wZW5lZF9maWxlX3NlcXVlbmNlXCJcbiAgICAgICAgICAgIDpwb3NpdGlvbl9pbl9saXN0PVwib3BlbmVkX2ZpbGVfcG9zaXRpb25faW5fbGlzdFwiXG4gICAgICAgICAgICBAcHJldk1lZGlhPVwibmF2TWVkaWEoLTEpXCJcbiAgICAgICAgICAgIEBuZXh0TWVkaWE9XCJuYXZNZWRpYSgrMSlcIlxuICAgICAgICAgICAgQGNsb3NlPVwiY2xvc2VGaWxlXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L3RyYW5zaXRpb24+XG5cbiAgICAgICAgPCEtLSA8dHJhbnNpdGlvbi1ncm91cCB0YWc9XCJkaXZcIiBuYW1lPVwicHJvamVjdHNMaXN0XCIgYXBwZWFyPiAtLT5cbiAgICAgICAgPHRyYW5zaXRpb24gbmFtZT1cInBhZ2VjaGFuZ2VcIiBtb2RlPVwib3V0LWluXCI+XG4gICAgICAgICAgPHRyYW5zaXRpb24tZ3JvdXBcbiAgICAgICAgICAgIHRhZz1cImRpdlwiXG4gICAgICAgICAgICBuYW1lPVwicHJvamVjdHNMaXN0XCJcbiAgICAgICAgICAgIGFwcGVhclxuICAgICAgICAgICAgOmtleT1cInNvcnRfb3JkZXIgKyAnLScgKyBncm91cF9tb2RlXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHYtaWY9XCJncm91cGVkX2ZpbGVzLmxlbmd0aCA9PT0gMFwiXG4gICAgICAgICAgICAgIGNsYXNzPVwidS1pbnN0cnVjdGlvbnMgX25vQ29udGVudFwiXG4gICAgICAgICAgICAgIDprZXk9XCInbm9jb250ZW50J1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt7ICR0KFwibm9fY29udGVudFwiKSB9fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJfZGF5RmlsZVNlY3Rpb25cIlxuICAgICAgICAgICAgICAgIHYtZm9yPVwieyBsYWJlbCwgZmlsZXMgfSBpbiBncm91cGVkX2ZpbGVzXCJcbiAgICAgICAgICAgICAgICA6a2V5PVwibGFiZWxcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIl9sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAge3sgbGFiZWwgfX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8dHJhbnNpdGlvbi1ncm91cFxuICAgICAgICAgICAgICAgICAgdGFnPVwiZGl2XCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiX2dyaWRcIlxuICAgICAgICAgICAgICAgICAgbmFtZT1cImxpc3RDb21wbGV0ZVwiXG4gICAgICAgICAgICAgICAgICBhcHBlYXJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8U2hhcmVkRm9sZGVySXRlbVxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIl9maWxlXCJcbiAgICAgICAgICAgICAgICAgICAgdi1mb3I9XCJmaWxlIGluIGZpbGVzXCJcbiAgICAgICAgICAgICAgICAgICAgOmtleT1cImZpbGUuJHBhdGhcIlxuICAgICAgICAgICAgICAgICAgICA6ZmlsZT1cImZpbGVcIlxuICAgICAgICAgICAgICAgICAgICA6aXNfb3BlbmVkPVwib3BlbmVkX2ZpbGUgJiYgb3BlbmVkX2ZpbGUuJHBhdGggPT09IGZpbGUuJHBhdGhcIlxuICAgICAgICAgICAgICAgICAgICBAb3Blbj1cIm9wZW5GaWxlKGZpbGUuJHBhdGgpXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC90cmFuc2l0aW9uLWdyb3VwPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgPC90cmFuc2l0aW9uLWdyb3VwPlxuICAgICAgICA8L3RyYW5zaXRpb24+XG5cbiAgICAgICAgPGZvb3RlciBjbGFzcz1cIl9mb290ZXJcIj5cbiAgICAgICAgICA8c21hbGw+XG4gICAgICAgICAgICA8YSBocmVmPVwibWFpbHRvOmNrZXJucmV1dGVyQGx1bWEtYXJsZXMub3JnXCIgdGFyZ2V0PVwiX2JsYW5rXCI+e3tcbiAgICAgICAgICAgICAgJHQoXCJoZWxwX2NvbnRhY3RcIilcbiAgICAgICAgICAgIH19PC9hXG4gICAgICAgICAgICA+PGJyIC8+XG4gICAgICAgICAgICB7eyAkdChcInZlcnNpb25cIikgfX0ge3sgJHJvb3QuYXBwX2luZm9zLnZlcnNpb24gfX1cblxuICAgICAgICAgICAgPGRpdiB2LWlmPVwiaXNfaW5zdGFuY2VfYWRtaW5cIj5cbiAgICAgICAgICAgICAgPERvd25sb2FkRm9sZGVyIDpwYXRoPVwic2hhcmVkX2ZvbGRlcl9wYXRoXCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgIDwvZm9vdGVyPlxuICAgICAgPC9kaXY+XG4gICAgICA8dHJhbnNpdGlvbiBuYW1lPVwicGFnZWNoYW5nZVwiIG1vZGU9XCJvdXQtaW5cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIl9maWx0ZXJCYXJcIiB2LWlmPVwic2hvd19maWx0ZXJfc29ydF9wYW5lXCI+XG4gICAgICAgICAgPEZpbHRlckJhclxuICAgICAgICAgICAgOnNoYXJlZF9maWxlcz1cInNoYXJlZF9maWxlc1wiXG4gICAgICAgICAgICA6Z3JvdXBfbW9kZS5zeW5jPVwiZ3JvdXBfbW9kZVwiXG4gICAgICAgICAgICA6c29ydF9vcmRlci5zeW5jPVwic29ydF9vcmRlclwiXG4gICAgICAgICAgICA6c2VhcmNoX3N0ci5zeW5jPVwic2VhcmNoX3N0clwiXG4gICAgICAgICAgICA6ZmlsZXR5cGVfZmlsdGVyLnN5bmM9XCJmaWxldHlwZV9maWx0ZXJcIlxuICAgICAgICAgICAgOmF1dGhvcl9wYXRoX2ZpbHRlci5zeW5jPVwiYXV0aG9yX3BhdGhfZmlsdGVyXCJcbiAgICAgICAgICAgIDphdmFpbGFibGVfa2V5d29yZHM9XCJhdmFpbGFibGVfa2V5d29yZHNcIlxuICAgICAgICAgICAgOmtleXdvcmRzX2ZpbHRlci5zeW5jPVwia2V5d29yZHNfZmlsdGVyXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvdHJhbnNpdGlvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuPHNjcmlwdD5cbmltcG9ydCBTaGFyZWRGb2xkZXJJdGVtIGZyb20gXCJAL2NvbXBvbmVudHMvU2hhcmVkRm9sZGVySXRlbS52dWVcIjtcbmltcG9ydCBJdGVtTW9kYWwgZnJvbSBcIkAvY29tcG9uZW50cy9JdGVtTW9kYWwudnVlXCI7XG5pbXBvcnQgRmlsdGVyQmFyIGZyb20gXCJAL2NvbXBvbmVudHMvRmlsdGVyQmFyLnZ1ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHByb3BzOiB7XG4gICAgc2hhcmVkX2ZvbGRlcl9wYXRoOiBTdHJpbmcsXG4gIH0sXG4gIGNvbXBvbmVudHM6IHtcbiAgICBTaGFyZWRGb2xkZXJJdGVtLFxuICAgIEl0ZW1Nb2RhbCxcbiAgICBGaWx0ZXJCYXIsXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNoYXJlZF9mb2xkZXI6IHVuZGVmaW5lZCxcblxuICAgICAgc2hvd19iYWNrdG90b3BfYnRuOiBmYWxzZSxcbiAgICAgIGN1cnJlbnRfc2Nyb2xsOiAwLFxuXG4gICAgICBzaG93X2ZpbHRlcl9zb3J0X3BhbmU6IGZhbHNlLFxuXG4gICAgICBzb3J0X29yZGVyOiBcImRhdGVfdXBsb2FkZWRcIixcbiAgICAgIHNlYXJjaF9zdHI6IFwiXCIsXG4gICAgICBmaWxldHlwZV9maWx0ZXI6IFwiYWxsXCIsXG4gICAgICBhdXRob3JfcGF0aF9maWx0ZXI6IFwiXCIsXG4gICAgICBrZXl3b3Jkc19maWx0ZXI6IFtdLFxuICAgICAgZ3JvdXBfbW9kZTogXCJkYXlcIixcblxuICAgICAgLy8gc29ydF9vcmRlcjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJzb3J0X29yZGVyXCIpIHx8IFwiZGF0ZV91cGxvYWRlZFwiLFxuICAgICAgLy8gc2VhcmNoX3N0cjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJzZWFyY2hfc3RyXCIpIHx8IFwiXCIsXG4gICAgICAvLyBhdXRob3JfcGF0aF9maWx0ZXI6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYXV0aG9yX3BhdGhfZmlsdGVyXCIpIHx8IFwiXCIsXG4gICAgICAvLyAvLyBub3Qgd29ya2luZ1xuICAgICAgLy8ga2V5d29yZHNfZmlsdGVyOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImtleXdvcmRzX2ZpbHRlclwiKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJrZXl3b3Jkc19maWx0ZXJcIikpIDogW10sXG4gICAgICAvLyBncm91cF9tb2RlOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdyb3VwX21vZGVcIikgfHwgXCJkYXlcIixcbiAgICB9O1xuICB9LFxuICBjcmVhdGVkKCkge30sXG4gIGFzeW5jIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5zaGFyZWRfZm9sZGVyID0gYXdhaXQgdGhpcy4kYXBpLmdldEZvbGRlcih7XG4gICAgICBwYXRoOiB0aGlzLnNoYXJlZF9mb2xkZXJfcGF0aCxcbiAgICB9KTtcbiAgICB0aGlzLiRhcGkuam9pbih7IHJvb206IHRoaXMuc2hhcmVkX2ZvbGRlcl9wYXRoIH0pO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge30sXG4gIHdhdGNoOiB7XG4gICAgLy8gc29ydF9vcmRlcigpIHtcbiAgICAvLyAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic29ydF9vcmRlclwiLCB0aGlzLnNvcnRfb3JkZXIpO1xuICAgIC8vIH0sXG4gICAgLy8gc2VhcmNoX3N0cigpIHtcbiAgICAvLyAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic2VhcmNoX3N0clwiLCB0aGlzLnNlYXJjaF9zdHIpO1xuICAgIC8vIH0sXG4gICAgLy8gYXV0aG9yX3BhdGhfZmlsdGVyKCkge1xuICAgIC8vICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJhdXRob3JfcGF0aF9maWx0ZXJcIiwgdGhpcy5hdXRob3JfcGF0aF9maWx0ZXIpO1xuICAgIC8vIH0sXG4gICAgLy8ga2V5d29yZHNfZmlsdGVyKCkge1xuICAgIC8vICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgLy8gICAgIFwia2V5d29yZHNfZmlsdGVyXCIsXG4gICAgLy8gICAgIEpTT04uc3RyaW5naWZ5KHRoaXMua2V5d29yZHNfZmlsdGVyKVxuICAgIC8vICAgKTtcbiAgICAvLyB9LFxuICAgIC8vIGdyb3VwX21vZGUoKSB7XG4gICAgLy8gICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImdyb3VwX21vZGVcIiwgdGhpcy5ncm91cF9tb2RlKTtcbiAgICAvLyB9LFxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIG9wZW5lZF9maWxlKCkge1xuICAgICAgaWYgKCF0aGlzLiRyb3V0ZS5xdWVyeT8uZmlsZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHRoaXMuc2hhcmVkX2ZpbGVzLmZpbmQoXG4gICAgICAgIChzaSkgPT4gdGhpcy5nZXRGaWxlbmFtZShzaS4kcGF0aCkgPT09IHRoaXMuJHJvdXRlLnF1ZXJ5LmZpbGVcbiAgICAgICk7XG4gICAgfSxcbiAgICBvcGVuZWRfZmlsZV9wb3NpdGlvbl9pbmRleCgpIHtcbiAgICAgIGlmICghdGhpcy5vcGVuZWRfZmlsZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRfc2hhcmVkX2ZpbGVzLmZpbmRJbmRleChcbiAgICAgICAgKGZtKSA9PiBmbS4kcGF0aCA9PT0gdGhpcy5vcGVuZWRfZmlsZS4kcGF0aFxuICAgICAgKTtcbiAgICB9LFxuICAgIG9wZW5lZF9maWxlX3NlcXVlbmNlKCkge1xuICAgICAgcmV0dXJuIGAke3RoaXMub3BlbmVkX2ZpbGVfcG9zaXRpb25faW5kZXggKyAxfS8ke1xuICAgICAgICB0aGlzLmZpbHRlcmVkX3NoYXJlZF9maWxlcy5sZW5ndGhcbiAgICAgIH1gO1xuICAgIH0sXG4gICAgb3BlbmVkX2ZpbGVfcG9zaXRpb25faW5fbGlzdCgpIHtcbiAgICAgIGNvbnN0IG9wZW5lZF9maWxlX2luZGV4ID0gdGhpcy5vcGVuZWRfZmlsZV9wb3NpdGlvbl9pbmRleDtcbiAgICAgIGlmIChvcGVuZWRfZmlsZV9pbmRleCA9PT0gZmFsc2UpIHJldHVybiBcIm5vbmVcIjtcblxuICAgICAgaWYgKHRoaXMuZmlsdGVyZWRfc2hhcmVkX2ZpbGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIFwiYWxvbmVcIjtcbiAgICAgIGlmIChvcGVuZWRfZmlsZV9pbmRleCA9PT0gMCkgcmV0dXJuIFwiZmlyc3RcIjtcbiAgICAgIGlmIChvcGVuZWRfZmlsZV9pbmRleCA9PT0gdGhpcy5maWx0ZXJlZF9zaGFyZWRfZmlsZXMubGVuZ3RoIC0gMSlcbiAgICAgICAgcmV0dXJuIFwibGFzdFwiO1xuICAgICAgcmV0dXJuIFwibm9uZVwiO1xuICAgIH0sXG5cbiAgICBzaGFyZWRfZmlsZXMoKSB7XG4gICAgICBpZiAoIXRoaXMuc2hhcmVkX2ZvbGRlcj8uJGZpbGVzKSByZXR1cm4gW107XG4gICAgICBjb25zdCBfYWxsX21lZGlhcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zaGFyZWRfZm9sZGVyLiRmaWxlcykpO1xuXG4gICAgICBjb25zdCBfc3RhY2tzX29mX21lZGlhcyA9IF9hbGxfbWVkaWFzLmZpbHRlcigobSkgPT4gbS5iZWxvbmdzX3RvX3N0YWNrKTtcblxuICAgICAgLy8gcmVtb3ZlIG1lZGlhcyBwYXJ0IG9mIHN0YWNrc1xuICAgICAgY29uc3QgX21lZGlhc19ub3RfaW5fc3RhY2tzID0gX2FsbF9tZWRpYXMucmVkdWNlKChhY2MsIG0pID0+IHtcbiAgICAgICAgLy8gaWYgKCFtLmRhdGVfY3JlYXRlZF9jb3JyZWN0ZWQpXG4gICAgICAgIC8vICAgbS5kYXRlX2NyZWF0ZWRfY29ycmVjdGVkID0gbS4kZGF0ZV9jcmVhdGVkIHx8IG0uJGRhdGVfdXBsb2FkZWQ7XG5cbiAgICAgICAgaWYgKG0uYmVsb25nc190b19zdGFjaykgcmV0dXJuIGFjYztcbiAgICAgICAgaWYgKG0uaXNfc3RhY2sgJiYgbS5zdGFja19maWxlc19tZXRhcykge1xuICAgICAgICAgIG0uX3N0YWNrX2ZpbGVzID0gbS5zdGFja19maWxlc19tZXRhcy5tYXAoKHNmbSkgPT5cbiAgICAgICAgICAgIF9zdGFja3Nfb2ZfbWVkaWFzLmZpbmQoKHNtKSA9PiBzbS4kcGF0aC5lbmRzV2l0aChcIi9cIiArIHNmbSkpXG4gICAgICAgICAgKTtcbiAgICAgICAgICAvLyBtLl9zdGFja19maWxlcyA9IG0uX3N0YWNrX2ZpbGVzXG4gICAgICAgICAgLy8gICAuY29uY2F0KG0uX3N0YWNrX2ZpbGVzKVxuICAgICAgICAgIC8vICAgLmNvbmNhdChtLl9zdGFja19maWxlcyk7XG4gICAgICAgICAgLy8gbS5fc3RhY2tfZmlsZXMgPSBtLl9zdGFja19maWxlc1xuICAgICAgICAgIC8vICAgLmNvbmNhdChtLl9zdGFja19maWxlcylcbiAgICAgICAgICAvLyAgIC5jb25jYXQobS5fc3RhY2tfZmlsZXMpO1xuICAgICAgICAgIC8vIG0uX3N0YWNrX2ZpbGVzID0gbS5fc3RhY2tfZmlsZXNcbiAgICAgICAgICAvLyAgIC5jb25jYXQobS5fc3RhY2tfZmlsZXMpXG4gICAgICAgICAgLy8gICAuY29uY2F0KG0uX3N0YWNrX2ZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgICBhY2MucHVzaChtKTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIFtdKTtcblxuICAgICAgX21lZGlhc19ub3RfaW5fc3RhY2tzLnNvcnQoXG4gICAgICAgIChhLCBiKSA9PiArbmV3IERhdGUoYi4kZGF0ZV91cGxvYWRlZCkgLSArbmV3IERhdGUoYS4kZGF0ZV91cGxvYWRlZClcbiAgICAgICk7XG4gICAgICByZXR1cm4gX21lZGlhc19ub3RfaW5fc3RhY2tzO1xuICAgIH0sXG4gICAgZmlsdGVyZWRfc2hhcmVkX2ZpbGVzKCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2hhcmVkX2ZpbGVzLmZpbHRlcigoZikgPT4ge1xuICAgICAgICBpZiAodGhpcy5hdXRob3JfcGF0aF9maWx0ZXIpXG4gICAgICAgICAgaWYgKCFmLiRhZG1pbnMgfHwgIWYuJGFkbWlucy5pbmNsdWRlcyh0aGlzLmF1dGhvcl9wYXRoX2ZpbHRlcikpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgaWYgKHRoaXMua2V5d29yZHNfZmlsdGVyLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBpZiAoIWYua2V5d29yZHMgfHwgIUFycmF5LmlzQXJyYXkoZi5rZXl3b3JkcykpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICBpZiAodGhpcy5rZXl3b3Jkc19maWx0ZXIuc29tZSgoa3dmKSA9PiAhZi5rZXl3b3Jkcy5pbmNsdWRlcyhrd2YpKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5maWxldHlwZV9maWx0ZXIgIT09IFwiYWxsXCIpXG4gICAgICAgICAgaWYgKCF0aGlzLmZpbGVPclN0YWNrQ29udGFpbnNUeXBlKGYsIHRoaXMuZmlsZXR5cGVfZmlsdGVyKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcblxuICAgICAgICBpZiAodGhpcy5zZWFyY2hfc3RyKSB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgKGYudGl0bGUgJiZcbiAgICAgICAgICAgICAgZi50aXRsZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHRoaXMuc2VhcmNoX3N0ci50b0xvd2VyQ2FzZSgpKSkgfHxcbiAgICAgICAgICAgIChmLmRlc2NyaXB0aW9uICYmXG4gICAgICAgICAgICAgIGYuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgIC5pbmNsdWRlcyh0aGlzLnNlYXJjaF9zdHIudG9Mb3dlckNhc2UoKSkpIHx8XG4gICAgICAgICAgICAoZi4kY29udGVudCAmJlxuICAgICAgICAgICAgICBmLiRjb250ZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModGhpcy5zZWFyY2hfc3RyLnRvTG93ZXJDYXNlKCkpKVxuICAgICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIGVsc2UgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdyb3VwZWRfZmlsZXMoKSB7XG4gICAgICBsZXQgb3JkZXJfcHJvcHM7XG4gICAgICBpZiAodGhpcy5zb3J0X29yZGVyID09PSBcImRhdGVfY3JlYXRlZFwiKVxuICAgICAgICBvcmRlcl9wcm9wcyA9IFtcbiAgICAgICAgICBcImRhdGVfY3JlYXRlZF9jb3JyZWN0ZWRcIixcbiAgICAgICAgICBcIiRkYXRlX2NyZWF0ZWRcIixcbiAgICAgICAgICBcIiRkYXRlX3VwbG9hZGVkXCIsXG4gICAgICAgIF07XG4gICAgICBlbHNlIGlmICh0aGlzLnNvcnRfb3JkZXIgPT09IFwiZGF0ZV91cGxvYWRlZFwiKVxuICAgICAgICBvcmRlcl9wcm9wcyA9IFtcIiRkYXRlX3VwbG9hZGVkXCJdO1xuICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBGaWxlc0J5KFxuICAgICAgICB0aGlzLmZpbHRlcmVkX3NoYXJlZF9maWxlcyxcbiAgICAgICAgb3JkZXJfcHJvcHMsXG4gICAgICAgIHRoaXMuZ3JvdXBfbW9kZVxuICAgICAgKTtcbiAgICB9LFxuICAgIGF2YWlsYWJsZV9rZXl3b3JkcygpIHtcbiAgICAgIGNvbnN0IGFsbF9rdyA9IHRoaXMuZmlsdGVyZWRfc2hhcmVkX2ZpbGVzLnJlZHVjZSgoYWNjLCBmKSA9PiB7XG4gICAgICAgIGlmIChmLmtleXdvcmRzICYmIEFycmF5LmlzQXJyYXkoZi5rZXl3b3JkcykpIHtcbiAgICAgICAgICBmLmtleXdvcmRzLm1hcCgoa3cpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBhY2MuZmluZCgoX2t3KSA9PiBfa3cudGl0bGUgPT09IGt3KTtcbiAgICAgICAgICAgIGlmIChpdGVtKSBpdGVtLmNvdW50ICs9IDE7XG4gICAgICAgICAgICBlbHNlIGFjYy5wdXNoKHsgdGl0bGU6IGt3LCBjb3VudDogMSB9KTtcblxuICAgICAgICAgICAgLy8gaWYgKCFhY2Nba3ddKSBhY2Nba3ddID0gMTtcbiAgICAgICAgICAgIC8vIGVsc2UgYWNjW2t3XSArPSAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgICB9LCBbXSk7XG4gICAgICByZXR1cm4gYWxsX2t3LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgcmV0dXJuIGIuY291bnQgLSBhLmNvdW50O1xuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIHVwZGF0ZWRTY3JvbGwoKSB7XG4gICAgICB0aGlzLmN1cnJlbnRfc2Nyb2xsID0gdGhpcy4kZWwuc2Nyb2xsVG9wO1xuICAgIH0sXG4gICAgc2Nyb2xsVG9wKCkge1xuICAgICAgdGhpcy4kZWwuc2Nyb2xsVG8oeyB0b3A6IDAsIGJlaGF2aW9yOiBcInNtb290aFwiIH0pO1xuICAgIH0sXG4gICAgb3BlbkZpbGUocGF0aCkge1xuICAgICAgbGV0IHF1ZXJ5ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUucXVlcnkpIHx8IHt9O1xuICAgICAgY29uc3QgbWV0YV9maWxlbmFtZSA9IHRoaXMuZ2V0RmlsZW5hbWUocGF0aCk7XG4gICAgICBxdWVyeS5maWxlID0gbWV0YV9maWxlbmFtZTtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcXVlcnkgfSk7XG4gICAgfSxcbiAgICBjbG9zZUZpbGUoKSB7XG4gICAgICBsZXQgcXVlcnkgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRyb3V0ZS5xdWVyeSkgfHwge307XG4gICAgICBkZWxldGUgcXVlcnkuZmlsZTtcbiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcXVlcnkgfSk7XG4gICAgfSxcbiAgICBuYXZNZWRpYShkaXIpIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5vcGVuZWRfZmlsZV9wb3NpdGlvbl9pbmRleDtcbiAgICAgIGNvbnN0IG5ld19tZWRpYSA9IHRoaXMuZmlsdGVyZWRfc2hhcmVkX2ZpbGVzW2luZGV4ICsgZGlyXTtcbiAgICAgIGlmIChuZXdfbWVkaWEpIHRoaXMub3BlbkZpbGUobmV3X21lZGlhLiRwYXRoKTtcbiAgICB9LFxuICAgIGZpbGVPclN0YWNrQ29udGFpbnNUeXBlKGYsIGZpbGV0eXBlKSB7XG4gICAgICBpZiAoZi4kdHlwZSAmJiBmLiR0eXBlID09PSBmaWxldHlwZSkgcmV0dXJuIHRydWU7XG4gICAgICAvLyBpZiBvbmUgb2YgdGhlIG1lZGlhIGluIHRoZSBzdGFjayBtYXRjaGVzXG4gICAgICBpZiAoZi5pc19zdGFjayAmJiBmLl9zdGFja19maWxlcy5zb21lKChmKSA9PiBmICYmIGYuJHR5cGUgPT09IGZpbGV0eXBlKSlcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbi5fc2hhcmVkRm9sZGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogYXV0bztcblxuICAuX3NoYXJlZEZvbGRlci0tY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgID4gLl9tYWluQ29udGVudCB7XG4gICAgICBmbGV4OiAxO1xuICAgIH1cbiAgICA+IC5fZmlsdGVyQmFyIHtcbiAgICAgIGZsZXg6IDAgMCAyNDBweDtcbiAgICAgIG1heC13aWR0aDogMjQwcHg7XG4gICAgfVxuICB9XG59XG5cbi5fbWFpbkNvbnRlbnQge1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYyh2YXIoLS1zcGFjaW5nKSAqIDQpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uX2ZpbHRlckJhciB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgd2hpdGU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5fdG9wYmFyIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxMDtcbiAgLy8gbWFyZ2luOiBjYWxjKHZhcigtLXNwYWNpbmcpICogMik7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tc3BhY2luZykgKiAxKTtcbiAgLy8gYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHdoaXRlO1xuXG4gIGJhY2tncm91bmQ6IHZhcigtLWMtYm9keWJnKTtcbiAgLy8gYmFja2dyb3VuZDogd2hpdGU7XG4gIC8vIGJhY2tkcm9wLWZpbHRlcjogYmx1cig2cHgpO1xuICAvLyBtYXNrOiBsaW5lYXItZ3JhZGllbnQoYmxhY2sgNzUlLCB0cmFuc3BhcmVudCAxMDAlKTtcbiAgbWFzazogbGluZWFyLWdyYWRpZW50KCMwMDAgODAlLCB0cmFuc3BhcmVudCk7XG59XG4uX3RvcGJhci0tY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLXNwYWNpbmcpICogMSk7XG4gIGdhcDogY2FsYyh2YXIoLS1zcGFjaW5nKSAqIDEpO1xuICBsaW5lLWhlaWdodDogMTtcbn1cbi5fZmlsZXNJbmRpY2F0b3Ige1xuICBwYWRkaW5nOiAwIGNhbGModmFyKC0tc3BhY2luZykgKiAxKTtcbn1cblxuLl90aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5fZGF5RmlsZVNlY3Rpb24ge1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLXNwYWNpbmcpICogMikgY2FsYyh2YXIoLS1zcGFjaW5nKSAqIDIpO1xufVxuXG4uX25vQ29udGVudCB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tc3BhY2luZykgKiAyKTtcbn1cblxuLl9sYWJlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgcGFkZGluZy1ib3R0b206IGNhbGModmFyKC0tc3BhY2luZykgKiAyKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiB2YXIoLS1zbC1mb250LXNpemUtbm9ybWFsKTtcbn1cblxuLl9ncmlkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgZ2FwOiBjYWxjKHZhcigtLXNwYWNpbmcpICogMykgY2FsYyh2YXIoLS1zcGFjaW5nKSAqIDIpO1xufVxuLl9maWxlIHtcbiAgd2lkdGg6IDE1MHB4O1xufVxuXG4uX3JlbW92ZUJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLl9mb290ZXIge1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXNwYWNpbmcpICogNik7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBhIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgfVxufVxuXG4uX2ZpbHRlclNvcnRCdG4ge1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLXNwYWNpbmcpIC8gMikgMDtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS1zcGFjaW5nKSAvIC0yKTtcbn1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/SharedFolder.vue?vue&type=script&lang=js&\n");

/***/ })

});