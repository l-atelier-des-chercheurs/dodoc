"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdateapp"]("LumaView",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/chutier/DocumentSpot.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/chutier/DocumentSpot.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_chutier_MediaStack_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/chutier/MediaStack.vue */ \"./src/components/chutier/MediaStack.vue\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    index: Number,\n    author_stacks_path: String,\n    selected_items: Array,\n    stack_path: String\n  },\n  components: {\n    MediaStack: _components_chutier_MediaStack_vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n  },\n  data() {\n    return {\n      stack: undefined,\n      is_expecting_drag: false,\n      is_draggedOn: false,\n      show_mediastack_modal: false,\n      is_adding_to_stack: false\n    };\n  },\n  created() {},\n  async mounted() {\n    if (this.stack_path) {\n      this.stack = await this.$api.getFolder({\n        path: this.stack_path\n      });\n      this.$api.join({\n        room: this.stack_path\n      });\n    }\n    this.$eventHub.$on(\"chutierItem.startDrag\", this.startDragItem);\n    this.$eventHub.$on(\"chutierItem.endDrag\", this.endDragItem);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"chutierItem.startDrag\", this.startDragItem);\n    this.$eventHub.$off(\"chutierItem.endDrag\", this.endDragItem);\n    if (this.stack_path) this.$api.leave({\n      room: this.stack_path\n    });\n  },\n  watch: {\n    stack_path: {\n      async handler() {},\n      immediate: true,\n      deep: true\n    }\n  },\n  computed: {\n    stack_files() {\n      if (this.stack?.$files && this.stack.$files.length > 0) return this.stack.$files;\n      return [];\n    },\n    stack_files_in_order() {\n      if (this.stack_files.length === 0 || !this.stack?.stack_files_metas) return [];\n      return this.stack.stack_files_metas.reduce((acc, meta_filename) => {\n        const file = this.stack_files.find(f => this.getFilename(f.$path) === meta_filename);\n        if (file) acc.push(file);\n        return acc;\n      }, []);\n    }\n  },\n  methods: {\n    startDragItem() {\n      this.is_expecting_drag = true;\n    },\n    endDragItem() {\n      this.is_expecting_drag = false;\n    },\n    dragEnter(event) {\n      const drag_types = event.dataTransfer?.types[0] === \"text/plain\";\n      if (drag_types) this.is_draggedOn = true;\n    },\n    dragOver(event) {\n      event.preventDefault();\n    },\n    dragLeave() {\n      this.is_draggedOn = false;\n    },\n    async drop(event) {\n      this.$alertify.delay(4000).success(\"dropped item\");\n      event.preventDefault();\n      this.is_draggedOn = false;\n      if (this.selected_items.length > 0) await this.addSelectedToStack();else {\n        const file_path = event.dataTransfer?.getData(\"text/plain\");\n        if (file_path) {\n          const file_paths = [JSON.parse(file_path)];\n          await this.createOrAppendToStack(file_paths);\n        }\n      }\n    },\n    async addSelectedToStack() {\n      const file_paths = this.selected_items.map(f => f.$path);\n      await this.createOrAppendToStack(file_paths);\n    },\n    async openOrAddToStack() {\n      if (this.selected_items.length > 0) await this.addSelectedToStack();else this.openStack();\n    },\n    async removeMediaFromStack(file_path) {\n      await this.$api.copyFile({\n        path: file_path,\n        path_to_destination_folder: this.connected_as.$path,\n        new_meta: {}\n      });\n      await this.$api.deleteItem({\n        path: file_path\n      });\n      let stack_files_metas = this.stack?.stack_files_metas.slice();\n      stack_files_metas = stack_files_metas.filter(m => m !== file_path);\n      await this.$api.updateMeta({\n        path: this.stack.$path,\n        new_meta: {\n          stack_files_metas\n        }\n      });\n    },\n    openStack() {\n      if (this.stack) this.show_mediastack_modal = true;\n    },\n    async createOrAppendToStack(file_paths) {\n      this.is_adding_to_stack = true;\n      let path_to_destination_folder;\n      if (this.stack?.$path) {\n        path_to_destination_folder = this.stack.$path;\n      } else {\n        const additional_meta = {\n          requested_slug: \"stack\",\n          stack_spot: this.index,\n          $admins: [this.connected_as.$path]\n        };\n        const new_folder_slug = await this.$api.createFolder({\n          path: this.author_stacks_path,\n          additional_meta\n        }).catch(err => {\n          this.$alertify.delay(4000).error(err);\n          throw err;\n        });\n        path_to_destination_folder = this.author_stacks_path + \"/\" + new_folder_slug;\n      }\n\n      // copy file to folder\n\n      await new Promise(r => setTimeout(r, 100));\n      let stack_files_metas = [];\n      if (this.stack?.stack_files_metas && Array.isArray(this.stack?.stack_files_metas)) stack_files_metas = this.stack?.stack_files_metas.slice();\n      for (const file_path of file_paths) {\n        const file_meta_name = await this.$api.copyFile({\n          path: file_path,\n          path_to_destination_folder,\n          new_meta: {}\n        });\n        await this.$api.deleteItem({\n          path: file_path\n        });\n        stack_files_metas.push(file_meta_name);\n        await this.$api.updateMeta({\n          path: path_to_destination_folder,\n          new_meta: {\n            stack_files_metas\n          }\n        });\n      }\n      await new Promise(r => setTimeout(r, 300));\n      this.is_adding_to_stack = false;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/chutier/DocumentSpot.vue?vue&type=script&lang=js&\n");

/***/ })

});