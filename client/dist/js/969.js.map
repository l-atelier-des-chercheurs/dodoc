{"version":3,"file":"js/969.js","mappings":"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","sources":["webpack://app/./src/adc-core/fields/DisplayOnMap.vue?32f9","webpack://app/./node_modules/ol/TileState.js","webpack://app/./node_modules/ol/Tile.js","webpack://app/./node_modules/ol/ImageTile.js","webpack://app/./node_modules/ol/reproj/common.js","webpack://app/./node_modules/ol/reproj/Triangulation.js","webpack://app/./node_modules/ol/reproj.js","webpack://app/./node_modules/ol/reproj/Tile.js","webpack://app/./node_modules/ol/structs/LRUCache.js","webpack://app/./node_modules/ol/tilecoord.js","webpack://app/./node_modules/ol/TileCache.js","webpack://app/./node_modules/ol/source/TileEventType.js","webpack://app/./node_modules/ol/TileRange.js","webpack://app/./node_modules/ol/tilegrid/TileGrid.js","webpack://app/./node_modules/ol/tilegrid.js","webpack://app/./node_modules/ol/source/Tile.js","webpack://app/./node_modules/ol/tileurlfunction.js","webpack://app/./node_modules/ol/source/UrlTile.js","webpack://app/./node_modules/ol/source/TileImage.js","webpack://app/./node_modules/ol/source/XYZ.js","webpack://app/./node_modules/ol/source/OSM.js","webpack://app/./node_modules/ol/source/StadiaMaps.js","webpack://app/./node_modules/ol/uri.js","webpack://app/./node_modules/ol/source/WMTS.js","webpack://app/./node_modules/ol/renderer/Map.js","webpack://app/./node_modules/ol/renderer/Composite.js","webpack://app/./node_modules/ol/layer/Group.js","webpack://app/./node_modules/ol/MapEvent.js","webpack://app/./node_modules/ol/MapBrowserEvent.js","webpack://app/./node_modules/ol/MapBrowserEventType.js","webpack://app/./node_modules/ol/pointer/EventType.js","webpack://app/./node_modules/ol/MapBrowserEventHandler.js","webpack://app/./node_modules/ol/MapProperty.js","webpack://app/./node_modules/ol/structs/PriorityQueue.js","webpack://app/./node_modules/ol/TileQueue.js","webpack://app/./node_modules/ol/control/Attribution.js","webpack://app/./node_modules/ol/control/Rotate.js","webpack://app/./node_modules/ol/control/Zoom.js","webpack://app/./node_modules/ol/control/defaults.js","webpack://app/./node_modules/ol/interaction/Property.js","webpack://app/./node_modules/ol/interaction/Interaction.js","webpack://app/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://app/./node_modules/ol/interaction/Pointer.js","webpack://app/./node_modules/ol/events/condition.js","webpack://app/./node_modules/ol/interaction/DragPan.js","webpack://app/./node_modules/ol/interaction/DragRotate.js","webpack://app/./node_modules/ol/render/Box.js","webpack://app/./node_modules/ol/interaction/DragBox.js","webpack://app/./node_modules/ol/interaction/DragZoom.js","webpack://app/./node_modules/ol/events/Key.js","webpack://app/./node_modules/ol/interaction/KeyboardPan.js","webpack://app/./node_modules/ol/interaction/KeyboardZoom.js","webpack://app/./node_modules/ol/Kinetic.js","webpack://app/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://app/./node_modules/ol/interaction/PinchRotate.js","webpack://app/./node_modules/ol/interaction/PinchZoom.js","webpack://app/./node_modules/ol/interaction/defaults.js","webpack://app/./node_modules/ol/Map.js","webpack://app/./node_modules/ol/layer/TileProperty.js","webpack://app/./node_modules/ol/layer/BaseTile.js","webpack://app/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://app/./node_modules/ol/layer/Tile.js","webpack://app/./node_modules/ol/layer/BaseImage.js","webpack://app/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://app/./node_modules/ol/layer/Image.js","webpack://app/./node_modules/ol/resolution.js","webpack://app/./node_modules/ol/reproj/Image.js","webpack://app/./node_modules/ol/source/common.js","webpack://app/./node_modules/ol/source/Image.js","webpack://app/./node_modules/ol/source/static.js","webpack://app/./node_modules/ol/source/ImageStatic.js","webpack://app/./node_modules/ol/tilegrid/WMTS.js","webpack://app/./node_modules/ol/Overlay.js","webpack://app/./node_modules/ol/geom/flat/interpolate.js","webpack://app/./node_modules/ol/geom/LineString.js","webpack://app/./node_modules/ol/geom/Circle.js","webpack://app/./node_modules/ol/control/FullScreen.js","webpack://app/./node_modules/ol/control/ScaleLine.js","webpack://app/./node_modules/ol/geom/GeometryCollection.js","webpack://app/./node_modules/ol/geom/MultiLineString.js","webpack://app/./node_modules/ol/geom/MultiPoint.js","webpack://app/./node_modules/ol/geom/flat/center.js","webpack://app/./node_modules/ol/geom/MultiPolygon.js","webpack://app/./node_modules/ol/interaction/Draw.js","webpack://app/./node_modules/ol/events/SnapEvent.js","webpack://app/./node_modules/ol/interaction/Snap.js","webpack://app/./node_modules/ol/interaction/Select.js","webpack://app/./node_modules/ol/interaction/Translate.js","webpack://app/./node_modules/ol/interaction/Modify.js","webpack://app/./node_modules/ol-ext/filter/Base.js","webpack://app/./node_modules/ol-ext/filter/CSS.js","webpack://app/src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?2e37","webpack://app/./src/adc-core/fields/DisplayOnMap.vue","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?c9a5","webpack://app/./node_modules/ol/ol.css","webpack://app/../konstants/index.js","webpack://app/../src/helpers/mix.js","webpack://app/../src/helpers/dom.js","webpack://app/../src/html.js","webpack://app/../src/helpers/ajax.js","webpack://app/../src/providers/photon.js","webpack://app/../src/providers/osm.js","webpack://app/../src/providers/mapquest.js","webpack://app/../src/providers/bing.js","webpack://app/../src/providers/opencage.js","webpack://app/../src/nominatim.js","webpack://app/../src/base.js","webpack://app/./node_modules/rbush/rbush.min.js","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css?5e9d","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?cf40","webpack://app/./node_modules/ol/ol.css?8d4f","webpack://app/./node_modules/ol/Collection.js","webpack://app/./node_modules/ol/CollectionEventType.js","webpack://app/./node_modules/ol/Disposable.js","webpack://app/./node_modules/ol/Feature.js","webpack://app/./node_modules/ol/Image.js","webpack://app/./node_modules/ol/ImageState.js","webpack://app/./node_modules/ol/MapEventType.js","webpack://app/./node_modules/ol/Object.js","webpack://app/./node_modules/ol/ObjectEventType.js","webpack://app/./node_modules/ol/Observable.js","webpack://app/./node_modules/ol/ViewProperty.js","webpack://app/./node_modules/ol/centerconstraint.js","webpack://app/./node_modules/ol/resolutionconstraint.js","webpack://app/./node_modules/ol/View.js","webpack://app/./node_modules/ol/ViewHint.js","webpack://app/./node_modules/ol/array.js","webpack://app/./node_modules/ol/asserts.js","webpack://app/./node_modules/ol/color.js","webpack://app/./node_modules/ol/colorlike.js","webpack://app/./node_modules/ol/console.js","webpack://app/./node_modules/ol/control/Control.js","webpack://app/./node_modules/ol/coordinate.js","webpack://app/./node_modules/ol/css.js","webpack://app/./node_modules/ol/dom.js","webpack://app/./node_modules/ol/easing.js","webpack://app/./node_modules/ol/events.js","webpack://app/./node_modules/ol/events/Event.js","webpack://app/./node_modules/ol/events/EventType.js","webpack://app/./node_modules/ol/events/Target.js","webpack://app/./node_modules/ol/extent.js","webpack://app/./node_modules/ol/extent/Relationship.js","webpack://app/./node_modules/ol/functions.js","webpack://app/./node_modules/ol/geom/Geometry.js","webpack://app/./node_modules/ol/geom/Point.js","webpack://app/./node_modules/ol/geom/LinearRing.js","webpack://app/./node_modules/ol/geom/Polygon.js","webpack://app/./node_modules/ol/geom/SimpleGeometry.js","webpack://app/./node_modules/ol/geom/flat/area.js","webpack://app/./node_modules/ol/geom/flat/closest.js","webpack://app/./node_modules/ol/geom/flat/contains.js","webpack://app/./node_modules/ol/geom/flat/deflate.js","webpack://app/./node_modules/ol/geom/flat/inflate.js","webpack://app/./node_modules/ol/geom/flat/interiorpoint.js","webpack://app/./node_modules/ol/geom/flat/intersectsextent.js","webpack://app/./node_modules/ol/geom/flat/length.js","webpack://app/./node_modules/ol/geom/flat/reverse.js","webpack://app/./node_modules/ol/geom/flat/orient.js","webpack://app/./node_modules/ol/geom/flat/segments.js","webpack://app/./node_modules/ol/geom/flat/simplify.js","webpack://app/./node_modules/ol/geom/flat/transform.js","webpack://app/./node_modules/ol/has.js","webpack://app/./node_modules/ol/layer/Base.js","webpack://app/./node_modules/ol/layer/Layer.js","webpack://app/./node_modules/ol/layer/Property.js","webpack://app/./node_modules/ol/expr/expression.js","webpack://app/./node_modules/ol/expr/cpu.js","webpack://app/./node_modules/ol/render/canvas/style.js","webpack://app/./node_modules/ol/layer/BaseVector.js","webpack://app/./node_modules/ol/render/canvas/Instruction.js","webpack://app/./node_modules/ol/render/VectorContext.js","webpack://app/./node_modules/ol/render/canvas/Builder.js","webpack://app/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://app/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://app/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://app/./node_modules/ol/geom/flat/linechunk.js","webpack://app/./node_modules/ol/geom/flat/straightchunk.js","webpack://app/./node_modules/ol/render/canvas/TextBuilder.js","webpack://app/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://app/./node_modules/ol/geom/flat/textpath.js","webpack://app/./node_modules/ol/render/canvas/Executor.js","webpack://app/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://app/./node_modules/ol/render/canvas/Immediate.js","webpack://app/./node_modules/ol/render/canvas/hitdetect.js","webpack://app/./node_modules/ol/renderer/vector.js","webpack://app/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://app/./node_modules/ol/layer/Vector.js","webpack://app/./node_modules/ol/math.js","webpack://app/./node_modules/ol/obj.js","webpack://app/./node_modules/ol/proj/epsg3857.js","webpack://app/./node_modules/ol/proj/epsg4326.js","webpack://app/./node_modules/ol/proj/projections.js","webpack://app/./node_modules/ol/proj/transforms.js","webpack://app/./node_modules/ol/sphere.js","webpack://app/./node_modules/ol/proj.js","webpack://app/./node_modules/ol/proj/Projection.js","webpack://app/./node_modules/ol/proj/Units.js","webpack://app/./node_modules/ol/render/Event.js","webpack://app/./node_modules/ol/render/EventType.js","webpack://app/./node_modules/ol/render/canvas.js","webpack://app/./node_modules/ol/renderer/Layer.js","webpack://app/./node_modules/ol/renderer/canvas/Layer.js","webpack://app/./node_modules/ol/rotationconstraint.js","webpack://app/./node_modules/ol/size.js","webpack://app/./node_modules/ol/source/Source.js","webpack://app/./node_modules/ol/loadingstrategy.js","webpack://app/./node_modules/ol/featureloader.js","webpack://app/./node_modules/ol/source/Vector.js","webpack://app/./node_modules/ol/source/VectorEventType.js","webpack://app/./node_modules/ol/structs/RBush.js","webpack://app/./node_modules/ol/style/Circle.js","webpack://app/./node_modules/ol/style/Fill.js","webpack://app/./node_modules/ol/style/IconImage.js","webpack://app/./node_modules/ol/style/Icon.js","webpack://app/./node_modules/ol/style/IconImageCache.js","webpack://app/./node_modules/ol/style/Image.js","webpack://app/./node_modules/ol/style/RegularShape.js","webpack://app/./node_modules/ol/style/Stroke.js","webpack://app/./node_modules/ol/style/Style.js","webpack://app/./node_modules/ol/style/Text.js","webpack://app/./node_modules/ol/tilegrid/common.js","webpack://app/./node_modules/ol/transform.js","webpack://app/./node_modules/ol/util.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"m_displayOnMap\",class:{\n    'is--small': _vm.is_small,\n    'is--image': _vm.map_baselayer === 'image',\n  },style:(_vm.map_styles)},[_c('div',{ref:\"map\",staticClass:\"_map\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.clicked_location.module || _vm.$slots.hasOwnProperty('popup_message')),expression:\"clicked_location.module || $slots.hasOwnProperty('popup_message')\"}],ref:\"popUp\",staticClass:\"_popup\",class:{\n      'is--pin': _vm.clicked_location.module,\n    }},[_c('div',{staticClass:\"_popupShadow\"}),_c('div',{key:_vm.clicked_location.latitude + '-' + _vm.clicked_location.longitude,staticClass:\"_popup--content\"},[_c('button',{ref:\"closePopup\",staticClass:\"u-button u-button_icon _popupClose\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closePopup}},[_c('b-icon',{attrs:{\"icon\":\"x-circle-fill\"}})],1),(_vm.clicked_location.module)?_c('div',{key:_vm.clicked_location.module.$path,staticClass:\"_pinContent\"}):_vm._e(),(_vm.popup_message)?_c('div',{staticClass:\"_popupMessage\",domProps:{\"innerHTML\":_vm._s(_vm.popup_message)}}):_vm._e(),(\n          !_vm.clicked_location.module && _vm.$slots.hasOwnProperty('popup_message')\n        )?_c('div',{staticClass:\"_popupMessage\"},[_vm._t(\"popup_message\")],2):_vm._e()])]),_c('div',{attrs:{\"id\":\"mouse-position\"}}),_c('div',{staticClass:\"_leftTopMenu\"},[(!_vm.$root.app_infos.is_electron)?_c('div',{staticClass:\"_buttonRow\"},[_c('button',{staticClass:\"u-button\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.getCurrentPosition}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"disc-fill\"}})],1)]):_vm._e(),_c('div',{staticClass:\"_buttonRow\"},[_c('button',{staticClass:\"u-button\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.zoomIn}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"plus\"}})],1),_c('button',{staticClass:\"u-button\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.zoomOut}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"dash\"}})],1)]),(_vm.map_baselayer !== 'image')?_c('div',{staticClass:\"_buttonRow\"},[_c('button',{staticClass:\"u-button\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleSearch}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"search\"}})],1)]):_vm._e(),(_vm.can_edit)?_c('div',{staticClass:\"_buttonRow\"},_vm._l((_vm.draw_modes),function(draw_mode){return _c('button',{key:draw_mode.key,staticClass:\"u-button\",class:{\n          'is--active': draw_mode.key === _vm.current_draw_mode,\n        },attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.toggleTool({\n            draw_mode: draw_mode,\n          })}}},[(draw_mode.icon)?_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":draw_mode.icon}}):_c('span',{domProps:{\"innerHTML\":_vm._s(draw_mode.svg)}}),(draw_mode.key === _vm.current_draw_mode)?[_vm._v(\" \"+_vm._s(draw_mode.label)+\" \")]:_vm._e()],2)}),0):_vm._e(),(_vm.can_edit)?_c('div',{staticClass:\"_buttonRow\"},[_c('button',{staticClass:\"u-button\",class:{\n          'is--active': 'Select' === _vm.current_draw_mode,\n        },attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.toggleTool({\n            draw_mode: { key: 'Select' },\n          })}}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"hand-index\"}}),('Select' === _vm.current_draw_mode)?[_vm._v(\" \"+_vm._s(_vm.$t(\"select\"))+\" \")]:_vm._e()],2)]):_vm._e(),_c('div',{staticClass:\"_buttonRow\"},[_c('button',{staticClass:\"u-button\",class:{\n          'is--active': _vm.start_map_print,\n        },attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.start_map_print = true}}},[_c('b-icon',{staticClass:\"inlineSVG\",attrs:{\"icon\":\"printer\"}})],1),(_vm.start_map_print)?_c('PrintMap',{attrs:{\"map\":_vm.map},on:{\"close\":function($event){_vm.start_map_print = false}}}):_vm._e()],1)]),_c('transition',{attrs:{\"name\":\"slideup\"}},[(_vm.draw_can_be_finished || 'Select' === _vm.current_draw_mode)?_c('div',{staticClass:\"_bottomMenu\"},[_c('div',{staticClass:\"_bottomMenu--content\"},[(_vm.draw_can_be_finished)?[_c('button',{staticClass:\"u-button u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.finishDrawing}},[_vm._v(\" \"+_vm._s(_vm.$t(\"finish_drawing\"))+\" \")]),_c('small',{staticClass:\"_instr u-instructions\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"or_double_click\"))+\" \")])]:('Select' === _vm.current_draw_mode)?[(!_vm.selected_feature)?_c('small',{staticClass:\"_instr u-instructions\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"select_by_clicking\"))+\" \")]):[_c('ColorInput',{attrs:{\"can_toggle\":false,\"live_editing\":true,\"label\":_vm.$t('outline_color'),\"value\":_vm.selected_feature.get('stroke_color'),\"default_value\":_vm.opened_view_color},on:{\"save\":function($event){return _vm.updateDrawing({\n                  prop: 'stroke_color',\n                  val: $event,\n                })}}}),(['Polygon', 'Circle'].includes(_vm.selected_feature_type))?_c('ColorInput',{attrs:{\"can_toggle\":false,\"live_editing\":true,\"label\":_vm.$t('background_color'),\"value\":_vm.selected_feature.get('fill_color')},on:{\"save\":function($event){return _vm.updateDrawing({\n                  prop: 'fill_color',\n                  val: $event,\n                })}}}):_vm._e(),_c('RangeValueInput',{staticClass:\"_strokeWidth\",attrs:{\"can_toggle\":false,\"label\":_vm.$t('outline_width'),\"value\":_vm.selected_feature.get('stroke_width'),\"min\":1,\"max\":40,\"step\":1,\"ticks\":[0, 3, 10, 20, 30, 40],\"default_value\":3},on:{\"save\":function($event){return _vm.updateDrawing({\n                  prop: 'stroke_width',\n                  val: $event,\n                })}}}),_c('button',{staticClass:\"u-button u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.removeSelected}},[_vm._v(\" \"+_vm._s(_vm.$t(\"remove\"))+\" \")])]]:_vm._e()],2)]):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} apiKey Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} retina Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      })\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable.js'\r\nimport ol_layer_Base from 'ol/layer/Base.js'\r\nimport ol_Object from 'ol/Object.js'\r\nimport ol_Map from 'ol/Map.js'\r\n\r\n/* Namespace */\r\nvar ol_filter = {};\r\nexport {ol_filter};\r\n\r\n/**\r\n * @classdesc \r\n * Abstract base class; normally only used for creating subclasses and not instantiated in apps.    \r\n * Used to create filters    \r\n * Use {@link ol_layer_Base#addFilter}, {@link ol_layer_Base#removeFilter} or {@link ol_layer_Base#getFilters}\r\n * to handle filters on layers.\r\n *\r\n * @constructor\r\n * @extends {ol.Object}\r\n * @param {Object} options \r\n *  @param {boolean} [options.active]\r\n */\r\nvar ol_filter_Base = class olfilterBase extends ol_Object {\r\n  constructor(options) {\r\n    super(options)\r\n    // Array of postcompose listener\r\n    this._listener = []\r\n    if (options && options.active === false) {\r\n      this.set('active', false)\r\n    } else {\r\n      this.set('active', true)\r\n    }\r\n  }\r\n  /** Activate / deactivate filter\r\n  *\t@param {boolean} b\r\n  */\r\n  setActive(b) {\r\n    this.set('active', b === true)\r\n  }\r\n  /** Get filter active\r\n  *\t@return {boolean}\r\n  */\r\n  getActive() {\r\n    return this.get('active')\r\n  }\r\n}\r\n\r\n;(function(){\r\n\r\n/** Internal function\r\n * @this {ol.filter} this the filter\r\n * @private\r\n */\r\nfunction precompose_(e) {\r\n  if (this.get('active') && e.context) this.precompose(e);\r\n}\r\n\r\n/** Internal function\r\n * @this {ol.filter} this the filter\r\n * @private\r\n */\r\nfunction postcompose_(e) {\r\n  if (this.get('active') && e.context) this.postcompose(e);\r\n}\r\n\r\n/** Force filter redraw / Internal function\r\n * @this {ol.Map|ol.layer.Layer} this: the map or layer the filter is added to\r\n * @private\r\n */\r\nfunction filterRedraw_(/* e */) {\r\n  if (this.renderSync) {\r\n    try { this.renderSync(); } catch(e) { /* ok */ }\r\n  } else {\r\n    this.changed(); \r\n  }\r\n}\r\n\r\n/** Add a filter to an ol object\r\n * @this {ol.Map|ol.layer.Layer} this: the map or layer the filter is added to\r\n * @private\r\n */\r\nfunction addFilter_(filter) {\r\n  if (!this.filters_) this.filters_ = [];\r\n  this.filters_.push(filter);\r\n  if (filter.addToLayer) filter.addToLayer(this);\r\n  if (filter.precompose) filter._listener.push ( { listener: this.on(['precompose','prerender'], precompose_.bind(filter)), target: this });\r\n  if (filter.postcompose) filter._listener.push ( { listener: this.on(['postcompose','postrender'], postcompose_.bind(filter)), target: this });\r\n  filter._listener.push ( { listener: filter.on('propertychange', filterRedraw_.bind(this)), target: this });\r\n  filterRedraw_.call (this);\r\n}\r\n\r\n/** Remove a filter to an ol object\r\n * @this {ol.Map|ol.layer.Layer} this: the map or layer the filter is added to\r\n * @private\r\n */\r\nfunction removeFilter_(filter) {\r\n  var i\r\n  if (!this.filters_) this.filters_ = [];\r\n  if (!filter) {\r\n    this.filters_.forEach(function(f) {\r\n      this.removeFilter(f)\r\n    }.bind(this))\r\n    return;\r\n  }\r\n  for (i=this.filters_.length-1; i>=0; i--) {\r\n    if (this.filters_[i]===filter) this.filters_.splice(i,1);\r\n  }\r\n  for (i=filter._listener.length-1; i>=0; i--) {\r\n    // Remove listener on this object\r\n    if (filter._listener[i].target === this) {\r\n      if (filter.removeFromLayer) filter.removeFromLayer(this);\r\n      ol_Observable_unByKey(filter._listener[i].listener);\r\n      filter._listener.splice(i,1);\r\n    }\r\n  }\r\n  filterRedraw_.call (this);\r\n}\r\n\r\n/** Add a filter to an ol.Map\r\n*\t@param {ol.filter}\r\n*/\r\nol_Map.prototype.addFilter = function (filter) {\r\n  console.warn('[OL-EXT] addFilter deprecated on map.')\r\n  addFilter_.call (this, filter);\r\n};\r\n/** Remove a filter to an ol.Map\r\n*\t@param {ol.filter}\r\n*/\r\nol_Map.prototype.removeFilter = function (filter) {\r\n  removeFilter_.call (this, filter);\r\n};\r\n/** Get filters associated with an ol.Map\r\n*\t@return {Array<ol.filter>}\r\n*/\r\nol_Map.prototype.getFilters = function () {\r\n  return this.filters_ || [];\r\n};\r\n\r\n/** Add a filter to an ol.Layer\r\n*\t@param {ol.filter}\r\n*/\r\nol_layer_Base.prototype.addFilter = function (filter) {\r\n  addFilter_.call (this, filter);\r\n};\r\n/** Remove a filter to an ol.Layer\r\n*\t@param {ol.filter}\r\n*/\r\nol_layer_Base.prototype.removeFilter = function (filter) {\r\n  removeFilter_.call (this, filter);\r\n};\r\n\r\n/** Get filters associated with an ol.Map\r\n*\t@return {Array<ol.filter>}\r\n*/\r\nol_layer_Base.prototype.getFilters = function () {\r\n  return this.filters_ || [];\r\n};\r\n\r\n})();\r\n\r\nexport default ol_filter_Base\r\n","import ol_filter_Base from './Base.js'\r\n\r\n/** Add a mix-blend-mode CSS filter (not working with IE or ol<6).\r\n * Add a className to the layer to apply the filter to a specific layer.    \r\n * With ol<6 use {@link ol_filter_Composite} instead.    \r\n * Use {@link ol_layer_Base#addFilter}, {@link ol_layer_Base#removeFilter} or {@link ol_layer_Base#getFilters}\r\n * @constructor\r\n * @extends {ol.Object}\r\n * @param {Object} options\r\n *  @param {string} options.blend mix-blend-mode to apply (as {@link https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode CSS property})\r\n *  @param {string} options.filter filter to apply (as {@link https://developer.mozilla.org/en-US/docs/Web/CSS/filter CSS property})\r\n *  @param {boolan} options.display show/hide layer from CSS (but keep it in layer list)\r\n */\r\nvar ol_filter_CSS = class olfilterCSS extends ol_filter_Base {\r\n  constructor(options) {\r\n    super(options);\r\n    this._layers = [];\r\n  }\r\n  /** Modify blend mode\r\n   * @param {string} blend mix-blend-mode to apply (as {@link https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode CSS property})\r\n   */\r\n  setBlend(blend) {\r\n    this.set('blend', blend);\r\n    this._layers.forEach(function (layer) {\r\n      layer.once('postrender', function (e) {\r\n        e.context.canvas.parentNode.style['mix-blend-mode'] = blend || '';\r\n      }.bind(this));\r\n      layer.changed();\r\n    });\r\n  }\r\n  /** Modify filter mode\r\n   * @param {string} filter filter to apply (as {@link https://developer.mozilla.org/en-US/docs/Web/CSS/filter CSS property})\r\n   */\r\n  setFilter(filter) {\r\n    this.set('filter', filter);\r\n    this._layers.forEach(function (layer) {\r\n      layer.once('postrender', function (e) {\r\n        e.context.canvas.parentNode.style['filter'] = filter || '';\r\n      }.bind(this));\r\n      layer.changed();\r\n    });\r\n  }\r\n  /** Modify layer visibility (but keep it in the layer list)\r\n   * @param {bolean} display\r\n   */\r\n  setDisplay(display) {\r\n    this.set('display', display);\r\n    this._layers.forEach(function (layer) {\r\n      layer.once('postrender', function (e) {\r\n        e.context.canvas.parentNode.style['display'] = display ? '' : 'none';\r\n      }.bind(this));\r\n      layer.changed();\r\n    });\r\n  }\r\n  /** Add CSS filter to the layer\r\n   * @param {ol_layer_Base} layer\r\n   */\r\n  addToLayer(layer) {\r\n    layer.once('postrender', function (e) {\r\n      e.context.canvas.parentNode.style['mix-blend-mode'] = this.get('blend') || '';\r\n      e.context.canvas.parentNode.style['filter'] = this.get('filter') || '';\r\n      e.context.canvas.parentNode.style['display'] = this.get('display') !== false ? '' : 'none';\r\n    }.bind(this));\r\n    layer.changed();\r\n    this._layers.push(layer);\r\n    // layer.getRenderer().getImage().parentNode.style['mix-blend-mode'] = 'multiply';\r\n  }\r\n  /** Remove CSS filter from the layer\r\n   * @param {ol_layer_Base} layer\r\n   */\r\n  removeFromLayer(layer) {\r\n    var pos = this._layers.indexOf(layer);\r\n    if (pos >= 0) {\r\n      layer.once('postrender', function (e) {\r\n        e.context.canvas.parentNode.style['mix-blend-mode'] = '';\r\n        e.context.canvas.parentNode.style['filter'] = '';\r\n        e.context.canvas.parentNode.style['display'] = '';\r\n      }.bind(this));\r\n      layer.changed();\r\n      this._layers.splice(pos, 1);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ol_filter_CSS\r\n","<template>\n  <div\n    class=\"m_displayOnMap\"\n    :class=\"{\n      'is--small': is_small,\n      'is--image': map_baselayer === 'image',\n    }\"\n    :style=\"map_styles\"\n  >\n    <div class=\"_map\" ref=\"map\" />\n\n    <div\n      ref=\"popUp\"\n      class=\"_popup\"\n      :class=\"{\n        'is--pin': clicked_location.module,\n      }\"\n      v-show=\"clicked_location.module || $slots.hasOwnProperty('popup_message')\"\n    >\n      <div class=\"_popupShadow\" />\n      <div\n        class=\"_popup--content\"\n        :key=\"clicked_location.latitude + '-' + clicked_location.longitude\"\n      >\n        <button\n          type=\"button\"\n          class=\"u-button u-button_icon _popupClose\"\n          ref=\"closePopup\"\n          @click=\"closePopup\"\n        >\n          <b-icon icon=\"x-circle-fill\" />\n        </button>\n\n        <div\n          v-if=\"clicked_location.module\"\n          :key=\"clicked_location.module.$path\"\n          class=\"_pinContent\"\n        >\n          <!-- <PublicationModule\n            :publimodule=\"clicked_location.module\"\n            :can_edit=\"false\"\n          /> -->\n          <!-- <MediaContent\n            :file=\"clicked_location.file\"\n            :is_draggable=\"false\"\n            :resolution=\"1600\"\n            :context=\"'full'\"\n            :show_fs_button=\"true\"\n          /> -->\n        </div>\n\n        <!-- <div class=\"u-instructions\">\n          <small>\n            <span class=\"complementaryText\"> {{ $t(\"latitude\") }} = </span>\n            {{ clicked_location.latitude }}°\n            <br />\n            <span class=\"complementaryText\"> {{ $t(\"longitude\") }} = </span>\n            {{ clicked_location.longitude }}°\n          </small>\n        </div> -->\n        <div\n          v-if=\"popup_message\"\n          class=\"_popupMessage\"\n          v-html=\"popup_message\"\n        />\n        <div\n          class=\"_popupMessage\"\n          v-if=\"\n            !clicked_location.module && $slots.hasOwnProperty('popup_message')\n          \"\n        >\n          <slot name=\"popup_message\" />\n        </div>\n      </div>\n    </div>\n    <div id=\"mouse-position\" />\n\n    <div class=\"_leftTopMenu\">\n      <div class=\"_buttonRow\" v-if=\"!$root.app_infos.is_electron\">\n        <!-- hidden if electron, need to find alternative strategy -->\n        <button type=\"button\" class=\"u-button\" @click=\"getCurrentPosition\">\n          <b-icon class=\"inlineSVG\" icon=\"disc-fill\" />\n        </button>\n      </div>\n\n      <div class=\"_buttonRow\">\n        <button type=\"button\" class=\"u-button\" @click=\"zoomIn\">\n          <b-icon class=\"inlineSVG\" icon=\"plus\" />\n        </button>\n        <button type=\"button\" class=\"u-button\" @click=\"zoomOut\">\n          <b-icon class=\"inlineSVG\" icon=\"dash\" />\n        </button>\n      </div>\n\n      <div class=\"_buttonRow\" v-if=\"map_baselayer !== 'image'\">\n        <button type=\"button\" class=\"u-button\" @click=\"toggleSearch\">\n          <b-icon class=\"inlineSVG\" icon=\"search\" />\n        </button>\n      </div>\n\n      <div class=\"_buttonRow\" v-if=\"can_edit\">\n        <button\n          v-for=\"draw_mode in draw_modes\"\n          type=\"button\"\n          class=\"u-button\"\n          :class=\"{\n            'is--active': draw_mode.key === current_draw_mode,\n          }\"\n          :key=\"draw_mode.key\"\n          @click=\"\n            toggleTool({\n              draw_mode,\n            })\n          \"\n        >\n          <b-icon\n            v-if=\"draw_mode.icon\"\n            class=\"inlineSVG\"\n            :icon=\"draw_mode.icon\"\n          />\n          <span v-else v-html=\"draw_mode.svg\" />\n          <template v-if=\"draw_mode.key === current_draw_mode\">\n            {{ draw_mode.label }}\n          </template>\n        </button>\n      </div>\n      <div class=\"_buttonRow\" v-if=\"can_edit\">\n        <button\n          type=\"button\"\n          class=\"u-button\"\n          :class=\"{\n            'is--active': 'Select' === current_draw_mode,\n          }\"\n          @click=\"\n            toggleTool({\n              draw_mode: { key: 'Select' },\n            })\n          \"\n        >\n          <b-icon class=\"inlineSVG\" icon=\"hand-index\" />\n          <template v-if=\"'Select' === current_draw_mode\">\n            {{ $t(\"select\") }}\n          </template>\n        </button>\n      </div>\n      <div class=\"_buttonRow\">\n        <button\n          type=\"button\"\n          class=\"u-button\"\n          :class=\"{\n            'is--active': start_map_print,\n          }\"\n          @click=\"start_map_print = true\"\n        >\n          <b-icon class=\"inlineSVG\" icon=\"printer\" />\n          <!-- <template v-if=\"start_map_print\">\n            {{ $t(\"print\") }}\n          </template> -->\n        </button>\n        <PrintMap\n          v-if=\"start_map_print\"\n          :map=\"map\"\n          @close=\"start_map_print = false\"\n        />\n      </div>\n    </div>\n\n    <transition name=\"slideup\">\n      <div\n        class=\"_bottomMenu\"\n        v-if=\"draw_can_be_finished || 'Select' === current_draw_mode\"\n      >\n        <div class=\"_bottomMenu--content\">\n          <template v-if=\"draw_can_be_finished\">\n            <button\n              type=\"button\"\n              class=\"u-button u-button_bleumarine\"\n              @click=\"finishDrawing\"\n            >\n              {{ $t(\"finish_drawing\") }}\n            </button>\n            <small class=\"_instr u-instructions\">\n              {{ $t(\"or_double_click\") }}\n            </small>\n          </template>\n          <template v-else-if=\"'Select' === current_draw_mode\">\n            <small class=\"_instr u-instructions\" v-if=\"!selected_feature\">\n              {{ $t(\"select_by_clicking\") }}\n            </small>\n            <template v-else>\n              <!-- <div class=\"\">\n                <small class=\"_instr u-instructions\">\n                  {{ $t(\"move_drawing\") }}\n                </small>\n              </div> -->\n\n              <ColorInput\n                :can_toggle=\"false\"\n                :live_editing=\"true\"\n                :label=\"$t('outline_color')\"\n                :value=\"selected_feature.get('stroke_color')\"\n                :default_value=\"opened_view_color\"\n                @save=\"\n                  updateDrawing({\n                    prop: 'stroke_color',\n                    val: $event,\n                  })\n                \"\n              />\n\n              <ColorInput\n                v-if=\"['Polygon', 'Circle'].includes(selected_feature_type)\"\n                :can_toggle=\"false\"\n                :live_editing=\"true\"\n                :label=\"$t('background_color')\"\n                :value=\"selected_feature.get('fill_color')\"\n                @save=\"\n                  updateDrawing({\n                    prop: 'fill_color',\n                    val: $event,\n                  })\n                \"\n              />\n\n              <RangeValueInput\n                class=\"_strokeWidth\"\n                :can_toggle=\"false\"\n                :label=\"$t('outline_width')\"\n                :value=\"selected_feature.get('stroke_width')\"\n                :min=\"1\"\n                :max=\"40\"\n                :step=\"1\"\n                :ticks=\"[0, 3, 10, 20, 30, 40]\"\n                :default_value=\"3\"\n                @save=\"\n                  updateDrawing({\n                    prop: 'stroke_width',\n                    val: $event,\n                  })\n                \"\n              />\n              <button\n                type=\"button\"\n                class=\"u-button u-button_bleumarine\"\n                @click=\"removeSelected\"\n              >\n                {{ $t(\"remove\") }}\n              </button>\n            </template>\n          </template>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n<script>\nimport olSourceOSM from \"ol/source/OSM\";\nimport olSourceStadiaMaps from \"ol/source/StadiaMaps\";\nimport olSourceWMTS from \"ol/source/WMTS\";\nimport olMap from \"ol/Map\";\nimport olView from \"ol/View\";\nimport { asArray, asString } from \"ol/color\";\nimport olFeature from \"ol/Feature\";\nimport olTileLayer from \"ol/layer/Tile\";\nimport olImageLayer from \"ol/layer/Image\";\nimport olProjection from \"ol/proj/Projection\";\nimport olStatic from \"ol/source/ImageStatic\";\nimport olTileGridWMTS from \"ol/tilegrid/WMTS\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport olSourceVector from \"ol/source/Vector\";\nimport * as olProj from \"ol/proj\";\nimport olOverlay from \"ol/Overlay\";\nimport { getCenter, extend } from \"ol/extent\";\n\n// import { getArea, getLength } from \"ol/sphere\";\n\nimport {\n  Point as olPoint,\n  LineString as olLineString,\n  Circle as olCircle,\n  Polygon as olPolygon,\n} from \"ol/geom\";\n// import GeoJSON from \"ol/format/GeoJSON\";\n\nimport Geocoder from \"ol-geocoder\";\nimport \"ol-geocoder/dist/ol-geocoder.min.css\";\n\nimport {\n  Circle as olCircleStyle,\n  Fill as olFill,\n  // RegularShape as olRegularShape,\n  Stroke as olStroke,\n  Icon as olIcon,\n  Style as olStyle,\n  Text as olText,\n} from \"ol/style\";\n\nimport {\n  ScaleLine as olScaleLine,\n  FullScreen as olFullScreen,\n} from \"ol/control\";\n\nimport {\n  Draw as olDraw,\n  Modify as olModify,\n  Select as olSelect,\n  Translate as olTranslate,\n  Snap as olSnap,\n} from \"ol/interaction\";\n\nimport { defaults as olDefaultControls } from \"ol/control\";\n\nimport olFilterCSS from \"ol-ext/filter/CSS\";\n\n// import PublicationModule from \"@/components/publications/modules/PublicationModule.vue\";\n\nexport default {\n  name: \"DisplayOnMap\",\n  props: {\n    pins: Array,\n    lines: Object,\n    geometries: Array,\n    start_zoom: {\n      type: [Boolean, Number],\n      default: 2,\n    },\n    map_baselayer: {\n      type: String,\n      default: \"OSM\",\n    },\n    map_baselayer_bw: {\n      type: Boolean,\n      default: false,\n    },\n    map_baselayer_opacity: {\n      type: Number,\n      default: 1,\n    },\n    map_base_media: Object,\n    is_small: {\n      type: Boolean,\n      default: true,\n    },\n    show_scale: {\n      type: Boolean,\n      default: true,\n    },\n    opened_view_color: String,\n    opened_pin_path: String,\n    can_click: {\n      type: Boolean,\n      default: true,\n    },\n    can_edit: Boolean,\n  },\n  components: {\n    // PublicationModule,\n    PrintMap: () => import(\"@/adc-core/fields/PrintMap.vue\"),\n  },\n  data() {\n    return {\n      map: undefined,\n\n      overlay: undefined,\n\n      popup_message: undefined,\n      clicked_location: {\n        latitude: undefined,\n        longitude: undefined,\n        module: undefined,\n      },\n\n      is_looking_for_gps_coords: false,\n\n      pin_features: undefined,\n      line_features: undefined,\n      mouse_feature: undefined,\n\n      current_zoom: undefined,\n      current_view: undefined,\n\n      mouse_coords: false,\n\n      map_modify: undefined,\n      map_draw: undefined,\n      map_snap: undefined,\n\n      pins_vector_source: undefined,\n      lines_vector_source: undefined,\n      draw_vector_source: undefined,\n      current_draw_mode: undefined,\n      draw_can_be_finished: undefined,\n      show_segments_length: false,\n      draw_modes: [\n        // {\n        //   key: \"LineString\",\n        //   label: this.$t(\"line\"),\n        //   icon: \"circle\",\n        //   freehand: false,\n        //   tip: ,\n        //   activeTip: ,\n        // },\n        {\n          key: \"FreehandLineString\",\n          label: this.$t(\"freehand\"),\n          icon: \"pen\",\n          olType: \"LineString\",\n          freehand: true,\n          idleTip: this.$t(\"click_drag_to_draw_line\"),\n          activeTip: \"\",\n        },\n        {\n          key: \"LineString\",\n          label: this.$t(\"lines\"),\n          svg: `\n          <svg\n            viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n            style=\"stroke-width: 1px; stroke: currentColor; width: 1.35em; height: 1.35em;\"\n          >\n            <line\n              x1=\"0\"\n              y1=\"100\"\n              x2=\"100\"\n              y2=\"0\"\n              vector-effect=\"non-scaling-stroke\"\n            />\n          </svg>\n\n          `,\n          olType: \"LineString\",\n          freehand: false,\n          idleTip: this.$t(\"click_to_place_first_point\"),\n          activeTip: this.$t(\"click_to_continue_drawing\"),\n        },\n        {\n          key: \"Polygon\",\n          label: this.$t(\"polygon\"),\n          icon: \"pentagon\",\n          olType: \"Polygon\",\n          freehand: false,\n          idleTip: this.$t(\"click_to_start_drawing\"),\n          activeTip: this.$t(\"click_to_continue_drawing\"),\n        },\n        {\n          key: \"Circle\",\n          label: this.$t(\"circle\"),\n          icon: \"circle\",\n          olType: \"Circle\",\n          freehand: false,\n          idleTip: this.$t(\"click_to_place_center\"),\n          activeTip: this.$t(\"click_to_define_circle_radius\"),\n        },\n      ],\n      map_select_mode: undefined,\n      selected_feature_id: undefined,\n      map_translate: undefined,\n\n      start_map_print: false,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        lines: \"Droites\",\n        freehand: \"Tracé libre\",\n        circle: \"Cercle\",\n        polygon: \"Polygone\",\n        select: \"Sélection\",\n\n        mouse_position: \"Position de la balise\",\n        search_for_a_place: \"Rechercher un lieu\",\n        click_to_start_drawing: \"cliquer pour commencer le tracé\",\n        click_to_continue_drawing: \"cliquez pour ajouter un autre point\",\n        click_drag_to_draw_line: \"cliquer-glisser pour dessiner une ligne\",\n        click_to_place_center: \"cliquer pour placer le centre\",\n        click_to_define_circle_radius: \"cliquer pour définir le rayon\",\n        click_to_place_first_point: \"cliquer pour placer le premier point\",\n        finish_drawing: \"Terminer le dessin\",\n        or_double_click: \"Ou double-cliquez sur la carte\",\n        drag_to_modify: \"cliquer-glisser pour modifier\",\n\n        select_by_clicking: \"sélectionner une forme en cliquant dessus\",\n        move_drawing: \"cliquer-glisser pour déplacer la forme\",\n      },\n      en: {\n        lines: \"Lines\",\n        freehand: \"Path\",\n        circle: \"Circle\",\n        polygon: \"Polygon\",\n        select: \"Select\",\n\n        search_for_a_place: \"Search for a place\",\n        click_to_start_drawing: \"click to start drawing\",\n        click_to_continue_drawing: \"click to continue drawing\",\n        click_drag_to_draw_line: \"click and hold to draw\",\n        click_to_place_center: \"click to place center\",\n        click_to_define_circle_radius: \"click to set circle radius\",\n        click_to_place_first_point: \"click to draw first point\",\n        finish_drawing: \"End drawing\",\n        or_double_click: \"Or double click for the last point\",\n        drag_to_modify: \"click and hold to modify\",\n\n        select_by_clicking: \"select by clicking\",\n        move_drawing: \"click and hold to draw\",\n      },\n    },\n  },\n  created() {\n    this.$eventHub.$on(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$on(\"publication.map.openPin\", this.openPin);\n    this.$eventHub.$on(\"publication.map.disableTools\", this.disableTools);\n    this.$eventHub.$on(\"publication.map.print\", this.printMap);\n    document.addEventListener(\"keyup\", this.keyPressed);\n  },\n  mounted() {\n    // setTimeout(() => {\n    this.startMap();\n    // }, 500);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$off(\"publication.map.openPin\", this.openPin);\n    this.$eventHub.$off(\"publication.map.disableTools\", this.disableTools);\n    this.$eventHub.$off(\"publication.map.print\", this.printMap);\n    document.removeEventListener(\"keyup\", this.keyPressed);\n  },\n  watch: {\n    pins: {\n      handler() {\n        this.loadPins();\n      },\n      deep: true,\n    },\n    lines: {\n      handler() {\n        this.loadLines();\n      },\n      deep: true,\n    },\n    geometries() {\n      if (\n        JSON.stringify(this.geometries) !==\n        JSON.stringify(this.convertFeaturesToStr())\n      )\n        this.loadGeom();\n    },\n    map_baselayer(val, oldVal) {\n      if (val !== oldVal && (val === \"image\" || oldVal === \"image\"))\n        this.startMap();\n      else this.startMap({ keep_loc_and_zoom: true });\n    },\n    map_baselayer_bw() {\n      this.setBackgroundLayerOptions();\n    },\n    map_baselayer_opacity() {\n      this.setBackgroundLayerOptions();\n    },\n    map_base_media() {\n      this.startMap();\n    },\n    opened_pin_path() {\n      if (this.opened_pin_path) this.openFeature(this.opened_pin_path);\n      else this.closePopup();\n    },\n    current_zoom() {\n      this.$emit(\"zoomUpdated\", this.current_zoom);\n    },\n  },\n  computed: {\n    map_styles() {\n      return {\n        \"--current-view-color\": this.opened_view_color,\n      };\n    },\n    default_pin_svg() {\n      const svg = `<svg enable-background=\"new 0 0 100 100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\">\n        <path\n          d=\"m78.527 5h-57.054c-4.104 0-7.431 3.324-7.431 7.428v57.059c0 4.106 3.326 7.433 7.431 7.433h11.965l16.501 18.08 16.5-18.085h12.088c4.104 0 7.431-3.322 7.431-7.429v-57.058c-.001-4.104-3.327-7.428-7.431-7.428z\"\n          fill=\"#fc4b60\"\n          stroke=\"#000\"\n          stroke-width=\"4px\"\n        />\n      </svg>`;\n      const b64 = btoa(unescape(encodeURIComponent(svg)));\n      return `data:image/svg+xml;base64, ${b64}`;\n    },\n    selected_feature() {\n      if (!this.selected_feature_id) return undefined;\n      return this.draw_vector_source?.getFeatureById(this.selected_feature_id);\n    },\n    selected_feature_type() {\n      if (!this.selected_feature) return undefined;\n      return this.selected_feature.getGeometry().getType();\n    },\n  },\n  methods: {\n    startMap({ keep_loc_and_zoom = false } = {}) {\n      let zoom = 6;\n      let center;\n\n      // destroy map if exist\n      if (this.map) {\n        if (keep_loc_and_zoom) {\n          zoom = this.map.getView().getZoom();\n          center = this.map.getView().getCenter();\n        }\n        this.map.setTarget(null);\n        this.map = null;\n      }\n\n      olProj.useGeographic();\n\n      const { view, background_layer } = this.createViewAndBackgroundLayer({\n        center,\n        zoom,\n      });\n      this.background_layer = background_layer;\n      this.view = view;\n\n      this.setBackgroundLayerOptions();\n\n      this.map = new olMap({\n        controls: olDefaultControls({\n          zoom: false,\n        }),\n        target: this.$refs.map,\n        view: this.view,\n        layers: [this.background_layer],\n      });\n\n      ////////////////////////////////////////////////////////////////////////// CREATE LINES\n\n      this.lines_vector_source = new olSourceVector({\n        wrapX: false,\n      });\n      this.loadLines();\n      this.map.addLayer(\n        new olVectorLayer({\n          source: this.lines_vector_source,\n          style: (feature, resolution) =>\n            this.makeLineStyle({ feature, resolution }),\n        })\n      );\n\n      ////////////////////////////////////////////////////////////////////////// DRAW LAYER\n\n      this.draw_vector_source = new olSourceVector({ wrapX: false });\n      this.loadGeom();\n      this.map.addLayer(\n        new olVectorLayer({\n          source: this.draw_vector_source,\n          style: (feature, resolution) =>\n            this.makeGeomStyle({ feature, resolution }),\n        })\n      );\n\n      ////////////////////////////////////////////////////////////////////////// CREATE PINS\n\n      this.pins_vector_source = new olSourceVector({\n        wrapX: false,\n      });\n      this.loadPins();\n      this.map.addLayer(\n        new olVectorLayer({\n          source: this.pins_vector_source,\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n            }),\n          // hides pins on map, not ideal\n          // declutter: true,\n        })\n      );\n\n      ////////////////////////////////////////////////////////////////////////// MOUSE\n\n      this.mouse_feature = new olFeature({\n        geometry: new olPoint([undefined, undefined]),\n      });\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: [this.mouse_feature],\n            wrapX: false,\n          }),\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n            }),\n        })\n      );\n\n      const fs_option = new olFullScreen();\n      this.map.addControl(fs_option);\n\n      ////////////////////////////////////////////////////////////////////////// SCALELINE\n\n      if (this.show_scale) {\n        const scale_line = new olScaleLine({\n          units: \"metric\",\n        });\n        this.map.addControl(scale_line);\n      }\n\n      ////////////////////////////////////////////////////////////////////////// SEARCH FIELD\n\n      let lang = \"fr-FR\";\n      if (this.$i18n.locale === \"en\") lang = \"en-US\";\n\n      const geocoder = new Geocoder(\"nominatim\", {\n        provider: \"osm\",\n        //key: '__some_key__',\n        lang,\n        placeholder: this.$t(\"search_for_a_place\"),\n        // targetType: \"text-input\",\n        limit: 5,\n        keepOpen: false,\n        preventDefault: true,\n      });\n      this.map.addControl(geocoder);\n      geocoder.on(\"addresschosen\", async (evt) => {\n        this.closePopup();\n\n        await this.$nextTick();\n\n        const place = evt.place;\n\n        if (place?.lon && place?.lat) {\n          const longitude = +place.lon;\n          const latitude = +place.lat;\n          await this.setClickBtn({\n            longitude,\n            latitude,\n          });\n\n          // not working, but should\n\n          let { bbox } = place;\n          if (bbox) {\n            const feature1 = new olFeature({\n              geometry: new olPoint([parseFloat(bbox[3]), parseFloat(bbox[0])]),\n            });\n            const feature2 = new olFeature({\n              geometry: new olPoint([parseFloat(bbox[2]), parseFloat(bbox[1])]),\n            });\n            const features = new olSourceVector({\n              wrapX: false,\n            });\n            features.addFeature(feature1);\n            features.addFeature(feature2);\n            const extent = features.getExtent();\n\n            this.map\n              .getView()\n\n              .fit(extent, {\n                padding: [50, 50, 50, 50],\n              });\n          } else {\n            this.navigateTo({\n              center: [longitude, latitude],\n            });\n          }\n\n          this.popup_message = evt.address.formatted;\n        }\n      });\n\n      ////////////////////////////////////////////////////////////////////////// OVERLAYS\n\n      this.overlay = new olOverlay({\n        element: this.$refs.popUp,\n        autoPan: false,\n      });\n      this.map.addOverlay(this.overlay);\n\n      ////////////////////////////////////////////////////////////////////////// MAP OR FEATURE CLICK\n\n      this.map.on(\"moveend\", () => {\n        this.current_zoom = this.roundToDec(this.map.getView().getZoom());\n        this.current_view = this.map.getView().getCenter();\n      });\n\n      this.map.on(\"singleclick\", async (event) => {\n        if (this.current_draw_mode) return;\n\n        this.closePopup();\n        await this.$nextTick();\n\n        const features = this.map.getFeaturesAtPixel(event.pixel);\n        const f = features.find((f) => f.getId());\n        const pin_path = f ? f.getId() : false;\n\n        let [longitude, latitude] = event.coordinate;\n        longitude = this.roundToDec(longitude, 6);\n        latitude = this.roundToDec(latitude, 6);\n\n        let type_of_pin;\n        if (f) type_of_pin = f.get(\"type_of_pin\");\n\n        if (pin_path && type_of_pin === \"media\") {\n          this.$eventHub.$emit(`publication.story.scrollTo.${pin_path}`);\n          this.openPin(pin_path);\n        } else if (this.can_click) {\n          this.setClickBtn({\n            longitude,\n            latitude,\n          });\n        }\n      });\n\n      ////////////////////////////////////////////////////////////////////////// SET VIEW\n\n      if (!keep_loc_and_zoom) {\n        let extent;\n\n        if (this.map_baselayer !== \"image\") {\n          let extents = [];\n          if (this.pins_vector_source.getFeatures().length > 0)\n            extents.push(this.pins_vector_source.getExtent());\n\n          if (this.draw_vector_source.getFeatures().length > 0)\n            extents.push(this.draw_vector_source.getExtent());\n\n          if (extents.length > 0) {\n            if (extents.length === 1) extent = extents[0];\n            else if (extents.length === 2)\n              extent = extend(extents[0], extents[1]);\n          }\n        } else {\n          extent = this.map.getView().getProjection().getExtent();\n        }\n\n        if (extent)\n          this.map.getView().fit(extent, {\n            padding: [50, 50, 50, 50],\n          });\n\n        // prevent zoom from being too high (even though it may be correct for the extent)\n        if (this.start_zoom) this.map.getView().setZoom(this.start_zoom);\n        else if (\n          this.map_baselayer !== \"image\" &&\n          this.map.getView().getZoom() > 15\n        )\n          this.map.getView().setZoom(15);\n      }\n    },\n    zoomIn() {\n      var view = this.map.getView();\n      var zoom = view.getZoom();\n      view.setZoom(zoom + 1);\n    },\n    zoomOut() {\n      var view = this.map.getView();\n      var zoom = view.getZoom();\n      view.setZoom(zoom - 1);\n    },\n    async setClickBtn({ longitude, latitude }) {\n      this.$emit(\"newPositionClicked\", {\n        longitude,\n        latitude,\n        zoom: this.current_zoom,\n      });\n      this.$eventHub.$emit(\"publication.map.click\", {\n        longitude,\n        latitude,\n      });\n      this.mouse_feature.getGeometry().setCoordinates([longitude, latitude]);\n\n      this.overlay.setPosition([longitude, latitude]);\n      this.clicked_location.longitude = longitude;\n      this.clicked_location.latitude = latitude;\n    },\n    getCurrentPosition() {\n      this.is_looking_for_gps_coords = true;\n      var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n      };\n      const success = async (pos) => {\n        var crd = pos.coords;\n        this.is_looking_for_gps_coords = false;\n        await this.setClickBtn({\n          longitude: crd.longitude,\n          latitude: crd.latitude,\n        });\n        this.navigateTo({\n          center: [crd.longitude, crd.latitude],\n        });\n      };\n      const error = (err) => {\n        this.$alertify\n          .delay(4000)\n          .error(\n            `Échec de la localisation de votre appareil.<br>(${err.code}): ${err.message}`\n          );\n        this.is_looking_for_gps_coords = false;\n      };\n      // not working in Electron, use something like http://ip-api.com/json https://www.reddit.com/r/electronjs/comments/hbxick/comment/fvq96v6/?utm_source=reddit&utm_medium=web2x&context=3 ?\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    },\n    toggleSearch() {\n      this.$el.querySelector(\"#gcd-button-control\").click();\n    },\n    printMap() {\n      this.start_map_print = true;\n    },\n    createViewAndBackgroundLayer({ center, zoom }) {\n      let view, background_layer;\n\n      if (this.map_baselayer === \"image\") {\n        if (!this.map_base_media) {\n          this.$alertify.delay(4000).error(\"missing base image\");\n          throw new Error(`missing base image`);\n        }\n\n        const img_width = this.map_base_media.$infos?.width;\n        const img_height = this.map_base_media.$infos?.height;\n        const img_src = this.makeMediaFileURL({\n          $path: this.map_base_media.$path,\n          $media_filename: this.map_base_media.$media_filename,\n        });\n        const attributions = this.map_base_media.caption;\n\n        const extent = [0, 0, img_width, img_height];\n        const projection = new olProjection({\n          code: \"custom-image\",\n          units: \"pixels\",\n          extent,\n        });\n        center = center || getCenter(extent);\n        zoom = 1;\n\n        view = new olView({\n          projection: projection,\n          center,\n          zoom,\n          maxZoom: 6,\n        });\n        background_layer = new olImageLayer({\n          source: new olStatic({\n            attributions,\n            url: img_src,\n            projection,\n            imageExtent: extent,\n          }),\n          className: \"ol-layer ol-basemap\",\n        });\n      } else {\n        // TODO check if center is contained in extent (see containsXY)\n        center = center || [5.39057449011251, 43.310173305629576];\n\n        const maxZoom = this.map_baselayer.includes(\"IGN\") ? 19 : 21;\n        view = new olView({\n          center,\n          zoom,\n          minZoom: 3,\n          maxZoom,\n          showFullExtent: true,\n          enableRotation: false,\n        });\n        const source = this.createSource(this.map_baselayer);\n        background_layer = new olTileLayer({\n          source,\n          className: \"ol-layer ol-basemap\",\n        });\n      }\n\n      this.current_zoom = zoom;\n      this.current_view = center;\n      return { view, background_layer };\n    },\n\n    createSource(type) {\n      if (type === \"OSM\") {\n        return new olSourceOSM({\n          wrapX: false,\n          noWrap: true,\n        });\n      } else if (type === \"stadia_alidade_smooth\") {\n        return new olSourceStadiaMaps({\n          layer: \"alidade_smooth\",\n          retina: true, // Set to false for stamen_watercolor\n        });\n      } else if (type === \"stadia_alidade_smooth_dark\") {\n        return new olSourceStadiaMaps({\n          layer: \"alidade_smooth_dark\",\n          retina: true, // Set to false for stamen_watercolor\n        });\n      } else if (type === \"stadia_toner\") {\n        return new olSourceStadiaMaps({\n          layer: \"stamen_toner\",\n          retina: true, // Set to false for stamen_watercolor\n        });\n      } else if (type === \"stadia_watercolor\") {\n        return new olSourceStadiaMaps({\n          layer: \"stamen_watercolor\",\n          retina: false,\n        });\n      } else if ([\"IGN_SAT\", \"IGN_MAP\"].includes(type)) {\n        const resolutions = [\n          156543.03392804103, 78271.5169640205, 39135.75848201024,\n          19567.879241005125, 9783.939620502562, 4891.969810251281,\n          2445.9849051256406, 1222.9924525628203, 611.4962262814101,\n          305.74811314070485, 152.87405657035254, 76.43702828517625,\n          38.218514142588134, 19.109257071294063, 9.554628535647034,\n          4.777314267823517, 2.3886571339117584, 1.1943285669558792,\n          0.5971642834779396, 0.29858214173896974, 0.14929107086948493,\n          0.07464553543474241,\n        ];\n\n        let layer, format;\n        if (type === \"IGN_MAP\") {\n          layer = \"GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2\";\n          format = \"image/png\";\n        } else if (type === \"IGN_SAT\") {\n          layer = \"ORTHOIMAGERY.ORTHOPHOTOS\";\n          format = \"image/jpeg\";\n        }\n\n        return new olSourceWMTS({\n          url: \"https://wxs.ign.fr/decouverte/geoportail/wmts\",\n          layer,\n          matrixSet: \"PM\",\n          format,\n          style: \"normal\",\n          tileGrid: new olTileGridWMTS({\n            origin: [-20037508, 20037508], // topLeftCorner\n            resolutions, // résolutions\n            matrixIds: [\n              \"0\",\n              \"1\",\n              \"2\",\n              \"3\",\n              \"4\",\n              \"5\",\n              \"6\",\n              \"7\",\n              \"8\",\n              \"9\",\n              \"10\",\n              \"11\",\n              \"12\",\n              \"13\",\n              \"14\",\n              \"15\",\n              \"16\",\n              \"17\",\n              \"18\",\n              \"19\",\n            ], // ids des TileMatrix\n          }),\n          wrapX: false,\n          noWrap: true,\n        });\n      }\n    },\n    makePointStyle({ feature, resolution, fill_color = \"hsl(0, 0%, 15%)\" }) {\n      // see https://openlayers.org/en/latest/examples/vector-labels.html\n      resolution;\n      let style = {};\n      if (feature?.get(\"label\")) {\n        style.text = new olText({\n          fill: new olFill({ color: \"#000\" }),\n          font: this.makeDefaultFontString(),\n          text: \"\" + feature.get(\"label\"),\n          textAlign: \"center\",\n          textBaseline: \"bottom\",\n          offsetY: -9,\n        });\n      }\n      if (feature?.get(\"fill_color\")) {\n        fill_color = feature.get(\"fill_color\");\n      }\n\n      const pin_preview = feature.get(\"pin_preview\");\n      const pin_preview_src = feature.get(\"pin_preview_src\");\n\n      if (pin_preview === \"icon\") {\n        style.text = undefined;\n        style.image = new olIcon({\n          anchor: [0.5, 1],\n          anchorXUnits: \"fraction\",\n          anchorYUnits: \"fraction\",\n          size: [30, 30],\n          // do not use color: it is injected directly in the svg\n          // color: fill_color,\n          src: pin_preview_src,\n        });\n      } else if (pin_preview === \"media_preview\") {\n        const first_media_thumb = feature.get(\"first_media_thumb\");\n        style.image = new olIcon({\n          anchor: [0.5, 1],\n          anchorXUnits: \"fraction\",\n          anchorYUnits: \"fraction\",\n          src: first_media_thumb,\n        });\n      } else if (pin_preview === \"default\") {\n        style.text = undefined;\n        style.image = new olIcon({\n          anchor: [0.5, 1],\n          anchorXUnits: \"fraction\",\n          anchorYUnits: \"fraction\",\n          size: [30, 30],\n          src: this.default_pin_svg,\n        });\n      } else {\n        style.image = this.makePointerStyle(fill_color);\n      }\n\n      return new olStyle(style);\n    },\n    makeDefaultFontString() {\n      return \"12px/1.2 Fira Mono,sans-serif\";\n    },\n    makeLineStyle({ feature, resolution }) {\n      resolution;\n      const style = {\n        stroke: new olStroke({\n          color: feature.get(\"stroke_color\"),\n          width: 3,\n          lineDash: [10, 10],\n        }),\n      };\n      return new olStyle(style);\n    },\n    modifyStyle() {\n      return new olStyle({\n        image: new olCircleStyle({\n          radius: 5,\n          stroke: new olStroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new olFill({\n            color: \"rgba(0, 0, 0, 0.4)\",\n          }),\n        }),\n        text: new olText({\n          text: this.$t(\"drag_to_modify\"),\n          font: this.makeDefaultFontString(),\n          fill: new olFill({\n            color: \"rgba(255, 255, 255, 1)\",\n          }),\n          backgroundFill: new olFill({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          padding: [2, 2, 2, 2],\n          textAlign: \"left\",\n          offsetX: 15,\n        }),\n      });\n    },\n    translateStyle() {\n      return new olStyle({\n        image: new olCircleStyle({\n          radius: 5,\n          stroke: new olStroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new olFill({\n            color: \"rgba(0, 0, 0, 0.4)\",\n          }),\n        }),\n        text: new olText({\n          text: this.$t(\"drag_to_modify\"),\n          font: this.makeDefaultFontString(),\n          fill: new olFill({\n            color: \"rgba(255, 255, 255, 1)\",\n          }),\n          backgroundFill: new olFill({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          padding: [2, 2, 2, 2],\n          textAlign: \"left\",\n          offsetX: 15,\n        }),\n      });\n    },\n    makeGeomStyle({ feature, resolution, tip, is_selected }) {\n      const styles = [];\n\n      // const line_dash = !is_selected ? undefined : [10, 5];\n      let stroke_width = feature.get(\"stroke_width\") || 3;\n      resolution;\n      // TEST\n      // stroke_width =\n      //   (feature.getProperties().value % 50 == 0 ? 3.175 : 1.863) *\n      //   Math.min(1, 2.5 / resolution);\n      // stroke_width = Math.max(3, stroke_width / resolution);\n\n      const stroke_color =\n        feature.get(\"stroke_color\") || this.opened_view_color || \"#000\";\n      let fill_color = feature.get(\"fill_color\") || \"rgba(255, 255, 255, 1)\";\n      fill_color = asString(asArray(fill_color).slice(0, 3).concat(0.2));\n\n      if (is_selected) {\n        const style = new olStyle({\n          stroke: new olStroke({\n            color: \"white\",\n            width: stroke_width + 4,\n            // lineDash: line_dash,\n          }),\n          image: this.makePointerStyle(),\n        });\n        styles.push(style);\n      }\n\n      const style = new olStyle({\n        fill: new olFill({\n          color: fill_color,\n        }),\n        stroke: new olStroke({\n          color: stroke_color,\n          width: stroke_width,\n          // lineDash: line_dash,\n        }),\n        image: this.makePointerStyle(),\n      });\n      styles.push(style);\n\n      const geometry = feature.getGeometry();\n      const type = geometry.getType();\n\n      if (\n        tip &&\n        (type === \"Point\" || is_selected) &&\n        (!this.map_modify ||\n          !this.map_modify.getOverlay().getSource().getFeatures().length)\n      ) {\n        const tipStyle = new olStyle({\n          text: new olText({\n            font: this.makeDefaultFontString(),\n            fill: new olFill({\n              color: \"rgba(0, 0, 0, 1)\",\n            }),\n            backgroundFill: new olFill({\n              color: \"rgba(255, 255, 255, .85)\",\n            }),\n            padding: [2, 2, 2, 2],\n            textAlign: \"left\",\n            offsetX: 15,\n          }),\n        });\n\n        tipStyle.getText().setText(tip);\n        styles.push(tipStyle);\n      }\n\n      return styles;\n    },\n    makePointerStyle(fill_color = this.opened_view_color || \"#000\") {\n      return new olCircleStyle({\n        radius: 5,\n        stroke: new olStroke({\n          width: 2,\n          color: fill_color,\n        }),\n        fill: new olFill({\n          color: \"rgba(255, 255, 255, .5)\",\n        }),\n      });\n    },\n    resetClickedLocation() {\n      if (this.mouse_feature)\n        this.mouse_feature.getGeometry().setCoordinates([undefined, undefined]);\n      this.clicked_location.latitude = undefined;\n      this.clicked_location.longitude = undefined;\n      this.clicked_location.module = undefined;\n      this.popup_message = undefined;\n    },\n    navigateTo({ center, zoom = this.current_zoom }) {\n      // used to stop current animation if there are any\n      // see https://github.com/openlayers/openlayers/issues/3714#issuecomment-263266468\n      this.view.setRotation(0);\n      this.view.animate({\n        center,\n        duration: 600,\n        zoom,\n      });\n    },\n    openPin(pin_path) {\n      this.$emit(\"update:opened_pin_path\", pin_path);\n    },\n    openFeature(path) {\n      const feature = this.pins_vector_source.getFeatureById(path);\n      const pin = this.pins.find((p) => p.path === path);\n      if (!feature) return \"no_feature_found\";\n\n      this.resetClickedLocation();\n\n      const coordinates = feature.getGeometry().getCoordinates();\n      this.clicked_location.module = pin?.module;\n      this.overlay.setPosition(coordinates);\n      this.clicked_location.longitude = coordinates[0];\n      this.clicked_location.latitude = coordinates[1];\n      this.navigateTo({\n        center: [\n          this.clicked_location.longitude,\n          this.clicked_location.latitude,\n        ],\n      });\n    },\n    closePopup() {\n      this.resetClickedLocation();\n      if (this.opened_pin_path) this.$emit(\"update:opened_pin_path\", undefined);\n\n      this.overlay.setPosition(undefined);\n      if (this.$refs.closePopup) this.$refs.closePopup.blur();\n\n      return false;\n    },\n    toggleTool({ draw_mode } = {}) {\n      this.closePopup();\n      this.endSelectMode();\n      this.endDraw();\n      if (!draw_mode || this.current_draw_mode === draw_mode.key) {\n        this.current_draw_mode = undefined;\n      } else {\n        this.current_draw_mode = draw_mode.key;\n        if (draw_mode.key === \"Select\") this.startSelectMode();\n        else this.startDrawMode({ draw_mode });\n      }\n    },\n    startDrawMode({ draw_mode }) {\n      let drawType = draw_mode.olType;\n      let freehand = draw_mode.freehand;\n      let idleTip = draw_mode.idleTip;\n      let activeTip = draw_mode.activeTip;\n\n      let tip = idleTip;\n      this.map_draw = new olDraw({\n        source: this.draw_vector_source,\n        type: drawType,\n        freehand,\n        style: (feature, resolution) =>\n          this.makeGeomStyle({ feature, resolution, tip }),\n        // style: (feature) => {\n        //   return this.styleFunction(\n        //     feature,\n        //     this.show_segments_length,\n        //     drawType,\n        //     tip\n        //   );\n        // },\n      });\n      this.map.addInteraction(this.map_draw);\n      this.map_draw.on(\"drawstart\", () => {\n        tip = activeTip;\n        if ([\"LineString\", \"Polygon\"].includes(this.current_draw_mode))\n          this.draw_can_be_finished = true;\n      });\n      this.map_draw.on(\"drawabort\", () => {\n        tip = idleTip;\n        this.draw_can_be_finished = false;\n      });\n      this.map_draw.on(\"drawend\", (event) => {\n        const new_feature = event.feature;\n        const type = new_feature.getGeometry().getType();\n        var id = this.makeRandomIdForShape(type);\n        new_feature.setId(id);\n        new_feature.set(\"type_of_pin\", \"geometry\");\n\n        this.$nextTick(() => {\n          this.saveGeom();\n        });\n        tip = idleTip;\n        this.draw_can_be_finished = false;\n      });\n\n      this.map_snap = new olSnap({ source: this.draw_vector_source });\n      this.map.addInteraction(this.map_snap);\n    },\n\n    // styleFunction(feature, segments, drawType, tip) {\n    //   const style = new olStyle({\n    //     fill: new olFill({\n    //       color: \"rgba(255, 255, 255, 0.2)\",\n    //     }),\n    //     stroke: new olStroke({\n    //       color: \"rgba(0, 0, 0, 0.5)\",\n    //       lineDash: [10, 10],\n    //       width: 2,\n    //     }),\n    //     image: new olCircleStyle({\n    //       radius: 5,\n    //       stroke: new olStroke({\n    //         color: \"rgba(0, 0, 0, 0.7)\",\n    //       }),\n    //       fill: new olFill({\n    //         color: \"rgba(255, 255, 255, 0.2)\",\n    //       }),\n    //     }),\n    //   });\n\n    //   const labelStyle = new olStyle({\n    //     text: new olText({\n    //       font: \"14px Calibri,sans-serif\",\n    //       fill: new olFill({\n    //         color: \"rgba(255, 255, 255, 1)\",\n    //       }),\n    //       backgroundFill: new olFill({\n    //         color: \"rgba(0, 0, 0, 0.7)\",\n    //       }),\n    //       padding: [3, 3, 3, 3],\n    //       textBaseline: \"bottom\",\n    //       offsetY: -15,\n    //     }),\n    //     image: new olRegularShape({\n    //       radius: 8,\n    //       points: 3,\n    //       angle: Math.PI,\n    //       displacement: [0, 10],\n    //       fill: new olFill({\n    //         color: \"rgba(0, 0, 0, 0.7)\",\n    //       }),\n    //     }),\n    //   });\n\n    //   const tipStyle = new olStyle({\n    //     text: new olText({\n    //       font: \"12px Calibri,sans-serif\",\n    //       fill: new olFill({\n    //         color: \"rgba(255, 255, 255, 1)\",\n    //       }),\n    //       backgroundFill: new olFill({\n    //         color: \"rgba(0, 0, 0, 0.4)\",\n    //       }),\n    //       padding: [2, 2, 2, 2],\n    //       textAlign: \"left\",\n    //       offsetX: 15,\n    //     }),\n    //   });\n\n    //   const segmentStyle = new olStyle({\n    //     text: new olText({\n    //       font: \"12px Calibri,sans-serif\",\n    //       fill: new olFill({\n    //         color: \"rgba(255, 255, 255, 1)\",\n    //       }),\n    //       backgroundFill: new olFill({\n    //         color: \"rgba(0, 0, 0, 0.4)\",\n    //       }),\n    //       padding: [2, 2, 2, 2],\n    //       textBaseline: \"bottom\",\n    //       offsetY: -12,\n    //     }),\n    //     image: new olRegularShape({\n    //       radius: 6,\n    //       points: 3,\n    //       angle: Math.PI,\n    //       displacement: [0, 8],\n    //       fill: new olFill({\n    //         color: \"rgba(0, 0, 0, 0.4)\",\n    //       }),\n    //     }),\n    //   });\n\n    //   const segmentStyles = [segmentStyle];\n\n    //   const formatLength = function (line) {\n    //     const length = getLength(line);\n    //     let output;\n    //     if (length > 100) {\n    //       output = Math.round((length / 1000) * 100) / 100 + \" km\";\n    //     } else {\n    //       output = Math.round(length * 100) / 100 + \" m\";\n    //     }\n    //     return output;\n    //   };\n\n    //   const formatArea = function (polygon) {\n    //     const area = getArea(polygon);\n    //     let output;\n    //     if (area > 10000) {\n    //       output = Math.round((area / 1000000) * 100) / 100 + \" km\\xB2\";\n    //     } else {\n    //       output = Math.round(area * 100) / 100 + \" m\\xB2\";\n    //     }\n    //     return output;\n    //   };\n\n    //   const styles = [];\n    //   const geometry = feature.getGeometry();\n    //   const type = geometry.getType();\n    //   let point, label, line;\n    //   if (!drawType || drawType === type || type === \"Point\") {\n    //     styles.push(style);\n    //     if (type === \"Polygon\") {\n    //       point = geometry.getInteriorPoint();\n    //       label = formatArea(geometry);\n    //       line = new olLineString(geometry.getCoordinates()[0]);\n    //     } else if (type === \"LineString\") {\n    //       point = new olPoint(geometry.getLastCoordinate());\n    //       label = formatLength(geometry);\n    //       line = geometry;\n    //     }\n    //   }\n    //   if (segments && line) {\n    //     let count = 0;\n    //     line.forEachSegment(function (a, b) {\n    //       const segment = new olLineString([a, b]);\n    //       const label = formatLength(segment);\n    //       if (segmentStyles.length - 1 < count) {\n    //         segmentStyles.push(segmentStyle.clone());\n    //       }\n    //       const segmentPoint = new olPoint(segment.getCoordinateAt(0.5));\n    //       segmentStyles[count].setGeometry(segmentPoint);\n    //       segmentStyles[count].getText().setText(label);\n    //       styles.push(segmentStyles[count]);\n    //       count++;\n    //     });\n    //   }\n    //   if (label) {\n    //     labelStyle.setGeometry(point);\n    //     labelStyle.getText().setText(label);\n    //     styles.push(labelStyle);\n    //   }\n    //   if (\n    //     tip &&\n    //     type === \"Point\"\n    //     //  &&\n    //     // !modify.getOverlay().getSource().getFeatures().length\n    //   ) {\n    //     // tipPoint = geometry;\n    //     tipStyle.getText().setText(tip);\n    //     styles.push(tipStyle);\n    //   }\n    //   return styles;\n    // },\n    makeRandomIdForShape(type) {\n      return `${type}-` + this.getRandomString();\n    },\n\n    finishDrawing() {\n      if (this.map_draw) this.map_draw.finishDrawing();\n    },\n    abortDrawing() {\n      if (this.map_draw) this.map_draw.abortDrawing();\n    },\n    disableTools() {\n      this.toggleTool();\n    },\n    setBackgroundLayerOptions() {\n      if (this.map_baselayer_bw === true) {\n        if (\n          !this.background_layer.getFilters().length ||\n          this.background_layer.getFilters().length === 0\n        ) {\n          this.background_layer.addFilter(\n            new olFilterCSS({ filter: \"grayscale(1)\" })\n          );\n        }\n      } else {\n        if (this.background_layer.getFilters().length >= 1)\n          this.background_layer.removeFilter();\n      }\n\n      if (this.map_baselayer_opacity < 1)\n        this.background_layer.setOpacity(this.map_baselayer_opacity);\n      else this.background_layer.setOpacity(1);\n    },\n    saveGeom() {\n      const geom_str = this.convertFeaturesToStr();\n      this.$emit(\"saveGeom\", geom_str);\n    },\n    convertFeaturesToStr() {\n      const features = this.draw_vector_source.getFeatures();\n      return features.reduce((acc, f) => {\n        const type = f.getGeometry().getType();\n\n        let obj = {};\n        if (type === \"Polygon\" || type === \"LineString\") {\n          obj.type = type;\n          obj.coords = f.getGeometry().getCoordinates();\n        } else if (type === \"Circle\") {\n          obj.type = type;\n          obj.center = f.getGeometry().getCenter();\n          obj.radius = f.getGeometry().getRadius();\n        } else {\n          return acc;\n        }\n\n        const stroke_width = f.get(\"stroke_width\");\n        if (stroke_width) obj.stroke_width = stroke_width;\n        const stroke_color = f.get(\"stroke_color\");\n        if (stroke_color) obj.stroke_color = stroke_color;\n        const fill_color = f.get(\"fill_color\");\n        if (fill_color) obj.fill_color = fill_color;\n\n        const id = f.getId();\n        if (id) obj.id = id;\n\n        acc.push(obj);\n\n        return acc;\n      }, []);\n    },\n    loadPins() {\n      this.pins_vector_source.clear();\n\n      let features = [];\n      if (this.pins && this.pins.length > 0) {\n        this.pins\n          .slice(0)\n          .reverse()\n          .map((pin) => {\n            if (!pin || !pin.longitude || !pin.latitude) return;\n\n            let feature_cont = {\n              geometry: new olPoint([pin.longitude, pin.latitude]),\n            };\n            if (pin.color) feature_cont.fill_color = pin.color;\n            // if (pin.module) feature_cont.module = pin.module;\n            if (pin.label) feature_cont.label = pin.label;\n            feature_cont.pin_preview = pin.pin_preview || \"default\";\n            if (pin.pin_preview_src)\n              feature_cont.pin_preview_src = pin.pin_preview_src;\n            if (pin.first_media_thumb)\n              feature_cont.first_media_thumb = pin.first_media_thumb;\n\n            const feature = new olFeature(feature_cont);\n            feature.setId(pin.path);\n            feature.set(\"type_of_pin\", \"media\");\n\n            features.push(feature);\n          });\n        this.pins_vector_source.addFeatures(features);\n        this.pins_vector_source.changed();\n      }\n    },\n    loadLines() {\n      this.lines_vector_source.clear();\n\n      let features = [];\n      if (this.lines && Object.keys(this.lines).length > 0) {\n        Object.values(this.lines).map(({ color, coordinates }) => {\n          const feature_cont = {\n            geometry: new olLineString(coordinates),\n            name: \"Path\",\n          };\n          feature_cont.stroke_color = color;\n          const feature = new olFeature(feature_cont);\n          features.push(feature);\n        });\n\n        this.lines_vector_source.addFeatures(features);\n        this.lines_vector_source.changed();\n      }\n    },\n    loadGeom() {\n      this.draw_vector_source.clear();\n\n      try {\n        let features = [];\n\n        this.geometries?.map((p) => {\n          let feature_cont;\n\n          if (p.type === \"Polygon\" && p.coords)\n            feature_cont = {\n              geometry: new olPolygon(p.coords),\n            };\n          else if (p.type === \"LineString\" && p.coords)\n            feature_cont = {\n              geometry: new olLineString(p.coords),\n            };\n          else if (p.type === \"Circle\" && p.center && p.radius)\n            feature_cont = {\n              geometry: new olCircle(p.center, p.radius),\n            };\n\n          if (p.stroke_width) feature_cont.stroke_width = p.stroke_width;\n          if (p.stroke_color) feature_cont.stroke_color = p.stroke_color;\n          if (p.fill_color) feature_cont.fill_color = p.fill_color;\n\n          const feature = new olFeature(feature_cont);\n          if (p.id) feature.setId(p.id);\n          else feature.setId(this.makeRandomIdForShape(p.type));\n          feature.set(\"type_of_pin\", \"geometry\");\n\n          features.push(feature);\n        });\n\n        if (features.length > 0) this.draw_vector_source.addFeatures(features);\n        this.draw_vector_source.changed();\n\n        if (this.selected_feature_id && !this.selected_feature)\n          this.selected_feature_id = undefined;\n      } catch (err) {\n        this.$alertify.delay(4000).error(err);\n        return false;\n      }\n    },\n    endDraw() {\n      this.abortDrawing();\n      this.map.removeInteraction(this.map_modify);\n      this.map.removeInteraction(this.map_draw);\n      this.map.removeInteraction(this.map_snap);\n    },\n    startSelectMode() {\n      this.selected_feature_id = undefined;\n      this.map_select_mode = new olSelect({\n        style: (feature, resolution) =>\n          this.makeGeomStyle({ feature, resolution, is_selected: true }),\n      });\n      this.map.addInteraction(this.map_select_mode);\n      this.map_select_mode.on(\"select\", (e) => {\n        if (e.target.getFeatures().getLength() > 0) {\n          const feature_selected = e.target.getFeatures().getArray()[0];\n          const id = feature_selected.getId();\n          if (id) return (this.selected_feature_id = id);\n        }\n        this.selected_feature_id = undefined;\n      });\n\n      this.startTranslate();\n      // clashes with translate on linestring\n      // this.startModify();\n    },\n    startTranslate() {\n      this.map_translate = new olTranslate({\n        features: this.map_select_mode.getFeatures(),\n      });\n      this.map.addInteraction(this.map_translate);\n      this.map_translate.on(\"translateend\", () => {\n        this.$nextTick(() => {\n          this.saveGeom();\n        });\n      });\n    },\n    endTranslate() {\n      this.map.removeInteraction(this.map_translate);\n    },\n    startModify() {\n      this.map_modify = new olModify({\n        source: this.draw_vector_source,\n        style: this.modifyStyle,\n      });\n      this.map.addInteraction(this.map_modify);\n      this.map_modify.on(\"modifyend\", () => {\n        this.$nextTick(() => {\n          this.saveGeom();\n        });\n      });\n    },\n    endModify() {\n      this.map.removeInteraction(this.map_modify);\n    },\n    removeSelected() {\n      if (!this.selected_feature) return false;\n      const f = this.draw_vector_source.getFeatureById(\n        this.selected_feature_id\n      );\n      this.draw_vector_source.removeFeature(f);\n      this.$nextTick(() => {\n        this.saveGeom();\n      });\n    },\n    updateDrawing({ prop, val }) {\n      if (!this.selected_feature) return false;\n      const f = this.draw_vector_source.getFeatureById(\n        this.selected_feature_id\n      );\n      f.set(prop, val);\n      this.$nextTick(() => {\n        this.saveGeom();\n      });\n    },\n    endSelectMode() {\n      this.map.removeInteraction(this.map_select_mode);\n      this.selected_feature_id = undefined;\n    },\n    keyPressed(event) {\n      if (\n        this.$root.modal_is_opened ||\n        event.target.tagName.toLowerCase() === \"select\" ||\n        event.target.tagName.toLowerCase() === \"input\" ||\n        event.target.tagName.toLowerCase() === \"textarea\" ||\n        event.target.className.includes(\"ql-editor\") ||\n        event.target.hasAttribute(\"contenteditable\")\n      )\n        return;\n\n      if (event.key === \"Backspace\" || event.key === \"Delete\")\n        this.removeSelected();\n      else if (event.key === \"Escape\" && this.map_draw) this.abortDrawing();\n      else if (event.key === \"Enter\" && this.map_draw) this.finishDrawing();\n      else if (event.key === \" \")\n        this.toggleTool({\n          draw_mode: { key: \"Select\" },\n        });\n      else if ([\"1\", \"2\", \"3\", \"4\"].includes(event.key)) {\n        const mode_num = Number.parseInt(event.key) - 1;\n        this.toggleTool({\n          draw_mode: this.draw_modes[mode_num],\n        });\n      }\n    },\n  },\n};\n</script>\n<style src=\"../../../node_modules/ol/ol.css\"></style>\n<style lang=\"scss\" scoped>\n.m_displayOnMap {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: var(--c-gris_clair);\n  font-size: 150%;\n\n  flex: 1 1 320px;\n\n  &.is--small {\n    width: 600px;\n    max-width: 100%;\n    aspect-ratio: 1;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n}\n._map {\n  width: 100%;\n  height: 100%;\n\n  ::v-deep {\n    .ol-geocoder {\n      position: absolute;\n      top: calc(6rem);\n      left: calc(var(--spacing) / 1 + 2rem + 2px);\n\n      font-size: 0.8em;\n      border-radius: 2px;\n\n      .gcd-gl-btn {\n        height: 2rem;\n        width: 2rem;\n      }\n      #gcd-button-control {\n        visibility: hidden;\n        width: 1px;\n        height: 1px;\n      }\n      .gcd-gl-control {\n        height: auto;\n        width: 0;\n        overflow: hidden;\n        border-radius: 0;\n        margin: 0;\n        background: transparent;\n\n        &.gcd-gl-expanded {\n          width: calc(14rem + 2px);\n        }\n      }\n      .gcd-gl-input {\n        width: 100%;\n        border-radius: 3px;\n        left: 0;\n        top: 0;\n        padding: calc(var(--spacing) / 4) calc(var(--spacing) / 2);\n        height: calc(2rem + 2px);\n        position: relative;\n        border: 1px solid var(--c-gris_fonce);\n\n        &:focus-visible {\n          box-shadow: none;\n          border-color: var(--active-color);\n        }\n      }\n    }\n    .gcd-road {\n      font-weight: normal;\n      font-style: italic;\n      font-size: var(--sl-font-size-small);\n      color: inherit;\n    }\n\n    .ol-full-screen {\n      top: auto;\n      bottom: calc(var(--spacing) * 3);\n      right: auto;\n      left: calc(var(--spacing) * 1);\n\n      .m_displayOnMap.is--image & {\n        bottom: calc(var(--spacing) * 1);\n      }\n    }\n    .ol-scale-line {\n      bottom: calc(var(--spacing) / 1);\n      left: calc(var(--spacing) / 1);\n\n      background: white;\n\n      padding: 0;\n      border-radius: 1px;\n      margin: 0;\n    }\n  }\n}\n._popup {\n  position: absolute;\n  bottom: 38px;\n  bottom: 9px;\n  left: -48px;\n  min-width: 280px;\n\n  font-size: var(--sl-font-size-normal);\n\n  &::before,\n  &::after {\n    top: 100%;\n\n    border: solid transparent;\n    border-width: 11px;\n    left: 47px;\n    margin-left: -10px;\n\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  &::before {\n    border-top-color: black;\n    opacity: 0.1;\n  }\n\n  &::after {\n    border-top-color: white;\n    top: 100%;\n    border-width: 9px;\n    left: 49px;\n  }\n  // &:before {\n  //   border-top-color: #cccccc;\n  //   border-width: 11px;\n  //   left: 48px;\n  //   margin-left: -11px;\n  // }\n  &.is--pin {\n    bottom: 38px;\n  }\n\n  ._pinContent,\n  ._popupClose {\n    pointer-events: auto;\n  }\n}\n._popup--content {\n  position: relative;\n  z-index: 1;\n  border-radius: 3px;\n  background: white;\n  overflow: hidden;\n}\n._popupShadow {\n  position: absolute;\n  inset: -2px;\n  background: black;\n  border-radius: 4px;\n  content: \"\";\n  z-index: -1;\n  opacity: 0.1;\n}\n\n._popupClose {\n  position: absolute;\n  z-index: 1000;\n  top: calc(var(--spacing) / -2);\n  right: calc(var(--spacing) / -2);\n  padding: calc(var(--spacing) / 1);\n}\n\n._pinContent {\n  position: relative;\n  // border-radius: var(--panel-radius);\n  overflow: hidden;\n  min-height: 2em;\n\n  ::v-deep ._publicationModule[data-type=\"text\"] {\n    padding: calc(var(--spacing) / 4) calc(var(--spacing) / 2) 0;\n  }\n}\n\n._popupMessage {\n  padding: calc(var(--spacing) / 2) calc(var(--spacing) / 1);\n}\n\n._leftTopMenu {\n  position: absolute;\n  top: calc(var(--spacing) / 1);\n  left: calc(var(--spacing) / 1);\n  pointer-events: none;\n\n  > ._buttonRow {\n    position: relative;\n\n    &:not(:last-child) {\n      margin-bottom: calc(var(--spacing) / 1);\n    }\n\n    &::before {\n      position: absolute;\n      inset: -1px;\n      background: black;\n      content: \"\";\n      width: calc(2rem + 2px);\n      border-radius: 3px;\n      opacity: 0.1;\n      z-index: 0;\n    }\n  }\n\n  button {\n    position: relative;\n    background: white;\n\n    padding: 0;\n    color: var(--c-noir);\n    height: 2rem;\n    min-width: 2rem;\n\n    background-color: white;\n    border: 2px solid transparent;\n    border-radius: 0;\n    margin-bottom: 1px;\n    pointer-events: auto;\n\n    padding: calc(var(--spacing) / 4);\n    display: flex;\n\n    &:hover,\n    &:focus-visible {\n    }\n\n    &.is--active {\n      background-color: var(--ol-background-color);\n      border-color: var(--current-view-color, --active-color);\n    }\n\n    &:first-child {\n      border-top-left-radius: 2px;\n      border-top-right-radius: 2px;\n    }\n    &:last-child {\n      border-bottom-left-radius: 2px;\n      border-bottom-right-radius: 2px;\n    }\n  }\n}\n\n._bottomMenu {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  pointer-events: none;\n  padding: calc(var(--spacing) / 2);\n\n  display: flex;\n\n  ._bottomMenu--content {\n    position: relative;\n    pointer-events: auto;\n    margin: 0 auto;\n    width: 100%;\n    max-width: 245px;\n\n    padding: calc(var(--spacing) / 2);\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 4px;\n\n    display: flex;\n    flex-flow: column nowrap;\n\n    &::before {\n      position: absolute;\n      inset: -1px;\n      content: \"\";\n      width: calc(100%);\n      border-radius: 3px;\n      opacity: 0.1;\n      z-index: 0;\n      border: 1px solid black;\n      pointer-events: none;\n    }\n  }\n}\n</style>\n<style lang=\"scss\"></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DisplayOnMap.vue?vue&type=template&id=0aba4292&scoped=true&\"\nimport script from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"../../../node_modules/ol/ol.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./DisplayOnMap.vue?vue&type=style&index=1&id=0aba4292&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0aba4292\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * ol-geocoder - v4.3.1\\n * A geocoder extension compatible with OpenLayers v6.x, v7.x & v8.x\\n * https://github.com/Dominique92/ol-geocoder\\n * Built: 15/09/2023 16:57:43\\n */.ol-touch .ol-control.gcd-gl-control button{font-size:1.14em}.ol-touch .ol-geocoder.gcd-gl-container{font-size:1.1em}.ol-geocoder.gcd-gl-container{box-sizing:border-box;font-size:.9em;left:.5em;position:absolute;top:4.875em}.ol-geocoder.gcd-gl-container *,.ol-geocoder.gcd-gl-container :after,.ol-geocoder.gcd-gl-container :before{box-sizing:inherit}.ol-geocoder .gcd-gl-control{height:2.1875em;overflow:hidden;transition:width .2s,height .2s;width:2.1875em}.ol-geocoder .gcd-gl-expanded{height:2.1875em;width:15.625em}.ol-geocoder .gcd-gl-input{background-color:#fff;border:1px solid #ccc;color:#222;font-family:inherit;font-size:.875em;left:2.5em;padding:5px;position:absolute;top:.25em;width:14.84375em;z-index:99}.ol-geocoder .gcd-gl-input:focus{border:none;box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 5px #4d90fe;outline:none}.ol-geocoder .gcd-gl-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:1.4;outline:0;position:absolute;right:0;top:0;width:1.5625em;z-index:100}.ol-geocoder .gcd-gl-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:1.5em}.ol-geocoder .gcd-gl-btn{cursor:pointer;height:1.5625em;left:.125em;position:absolute;top:.125em;width:1.5625em}.ol-geocoder .gcd-gl-btn:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-gl-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:2em;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:2.1875em;transition:max-height .3s ease-in;white-space:normal;width:16.25em}.ol-geocoder ul.gcd-gl-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-gl-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-gl-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-gl-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-gl-result:empty{display:none}.ol-geocoder.gcd-txt-container{box-sizing:border-box;height:4.375em;left:calc(50% - 12.5em);position:absolute;top:.5em;width:25em}.ol-geocoder.gcd-txt-container *,.ol-geocoder.gcd-txt-container :after,.ol-geocoder.gcd-txt-container :before{box-sizing:inherit}.ol-geocoder .gcd-txt-control{background-color:#fff;border:1px solid #ccc;height:4.375em;overflow:hidden;position:relative;width:100%}.ol-geocoder .gcd-txt-label{display:inline-block;text-align:center;width:100%}.ol-geocoder .gcd-txt-input{background-color:transparent;border:none;font-family:inherit;font-size:.875em;height:100%;left:0;padding:5px 30px 5px 40px;position:absolute;text-indent:6px;top:0;width:100%;z-index:99}.ol-geocoder .gcd-txt-input:focus{box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 6px #4d90fe;outline:none}.ol-geocoder .gcd-txt-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:100%;outline:0;position:absolute;right:0;top:0;vertical-align:middle;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:2em}.ol-geocoder .gcd-txt-glass{display:inline-block;height:100%;left:9px;position:absolute;top:26px;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-glass:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-txt-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:0;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:4.575em;transition:max-height .3s ease-in;white-space:normal;width:25em}.ol-geocoder ul.gcd-txt-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-txt-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-txt-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-txt-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-txt-result:empty{display:none}.ol-geocoder .gcd-hidden{opacity:0;visibility:hidden}.ol-geocoder .gcd-pseudo-rotate:after{animation:spin .7s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.gcd-address,.gcd-road{color:#333;font-size:.875em;font-weight:500}.gcd-city{font-weight:400}.gcd-city,.gcd-country{color:#333;font-size:.75em}.gcd-country{font-weight:lighter}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m_displayOnMap[data-v-0aba4292]{position:relative;width:100%;height:100%;background-color:var(--c-gris_clair);font-size:150%;flex:1 1 320px}.m_displayOnMap.is--small[data-v-0aba4292]{width:600px;max-width:100%;aspect-ratio:1;border-radius:4px;overflow:hidden}._map[data-v-0aba4292]{width:100%;height:100%}._map[data-v-0aba4292]  .ol-geocoder{position:absolute;top:6rem;left:calc(var(--spacing)/1 + 2rem + 2px);font-size:.8em;border-radius:2px}._map[data-v-0aba4292]  .ol-geocoder .gcd-gl-btn{height:2rem;width:2rem}._map[data-v-0aba4292]  .ol-geocoder #gcd-button-control{visibility:hidden;width:1px;height:1px}._map[data-v-0aba4292]  .ol-geocoder .gcd-gl-control{height:auto;width:0;overflow:hidden;border-radius:0;margin:0;background:transparent}._map[data-v-0aba4292]  .ol-geocoder .gcd-gl-control.gcd-gl-expanded{width:calc(14rem + 2px)}._map[data-v-0aba4292]  .ol-geocoder .gcd-gl-input{width:100%;border-radius:3px;left:0;top:0;padding:calc(var(--spacing)/4) calc(var(--spacing)/2);height:calc(2rem + 2px);position:relative;border:1px solid var(--c-gris_fonce)}._map[data-v-0aba4292]  .ol-geocoder .gcd-gl-input:focus-visible{box-shadow:none;border-color:var(--active-color)}._map[data-v-0aba4292]  .gcd-road{font-weight:400;font-style:italic;font-size:var(--sl-font-size-small);color:inherit}._map[data-v-0aba4292]  .ol-full-screen{top:auto;bottom:calc(var(--spacing)*3);right:auto;left:calc(var(--spacing)*1)}.m_displayOnMap.is--image ._map[data-v-0aba4292]  .ol-full-screen{bottom:calc(var(--spacing)*1)}._map[data-v-0aba4292]  .ol-scale-line{bottom:calc(var(--spacing)/1);left:calc(var(--spacing)/1);background:#fff;padding:0;border-radius:1px;margin:0}._popup[data-v-0aba4292]{position:absolute;bottom:38px;bottom:9px;left:-48px;min-width:280px;font-size:var(--sl-font-size-normal)}._popup[data-v-0aba4292]:after,._popup[data-v-0aba4292]:before{top:100%;border:solid transparent;border-width:11px;left:47px;margin-left:-10px;content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}._popup[data-v-0aba4292]:before{border-top-color:#000;opacity:.1}._popup[data-v-0aba4292]:after{border-top-color:#fff;top:100%;border-width:9px;left:49px}._popup.is--pin[data-v-0aba4292]{bottom:38px}._popup ._pinContent[data-v-0aba4292],._popup ._popupClose[data-v-0aba4292]{pointer-events:auto}._popup--content[data-v-0aba4292]{position:relative;z-index:1;border-radius:3px;background:#fff;overflow:hidden}._popupShadow[data-v-0aba4292]{position:absolute;inset:-2px;background:#000;border-radius:4px;content:\\\"\\\";z-index:-1;opacity:.1}._popupClose[data-v-0aba4292]{position:absolute;z-index:1000;top:calc(var(--spacing)/-2);right:calc(var(--spacing)/-2);padding:calc(var(--spacing)/1)}._pinContent[data-v-0aba4292]{position:relative;overflow:hidden;min-height:2em}._pinContent[data-v-0aba4292]  ._publicationModule[data-type=text]{padding:calc(var(--spacing)/4) calc(var(--spacing)/2) 0}._popupMessage[data-v-0aba4292]{padding:calc(var(--spacing)/2) calc(var(--spacing)/1)}._leftTopMenu[data-v-0aba4292]{position:absolute;top:calc(var(--spacing)/1);left:calc(var(--spacing)/1);pointer-events:none}._leftTopMenu>._buttonRow[data-v-0aba4292]{position:relative}._leftTopMenu>._buttonRow[data-v-0aba4292]:not(:last-child){margin-bottom:calc(var(--spacing)/1)}._leftTopMenu>._buttonRow[data-v-0aba4292]:before{position:absolute;inset:-1px;background:#000;content:\\\"\\\";width:calc(2rem + 2px);border-radius:3px;opacity:.1;z-index:0}._leftTopMenu button[data-v-0aba4292]{position:relative;background:#fff;padding:0;color:var(--c-noir);height:2rem;min-width:2rem;background-color:#fff;border:2px solid transparent;border-radius:0;margin-bottom:1px;pointer-events:auto;padding:calc(var(--spacing)/4);display:flex}._leftTopMenu button.is--active[data-v-0aba4292]{background-color:var(--ol-background-color);border-color:var(--current-view-color,--active-color)}._leftTopMenu button[data-v-0aba4292]:first-child{border-top-left-radius:2px;border-top-right-radius:2px}._leftTopMenu button[data-v-0aba4292]:last-child{border-bottom-left-radius:2px;border-bottom-right-radius:2px}._bottomMenu[data-v-0aba4292]{position:absolute;bottom:0;left:0;text-align:center;pointer-events:none}._bottomMenu[data-v-0aba4292],._bottomMenu ._bottomMenu--content[data-v-0aba4292]{width:100%;padding:calc(var(--spacing)/2);display:flex}._bottomMenu ._bottomMenu--content[data-v-0aba4292]{position:relative;pointer-events:auto;margin:0 auto;max-width:245px;background:hsla(0,0%,100%,.9);border-radius:4px;flex-flow:column nowrap}._bottomMenu ._bottomMenu--content[data-v-0aba4292]:before{position:absolute;inset:-1px;content:\\\"\\\";width:100%;border-radius:3px;opacity:.1;z-index:0;border:1px solid #000;pointer-events:none}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":host,:root{--ol-background-color:#fff;--ol-accent-background-color:#f5f5f5;--ol-subtle-background-color:hsla(0,0%,50%,.25);--ol-partial-background-color:hsla(0,0%,100%,.75);--ol-foreground-color:#333;--ol-subtle-foreground-color:#666;--ol-brand-color:#0af}.ol-box{box-sizing:border-box;border-radius:2px;border:1.5px solid var(--ol-background-color);background-color:var(--ol-partial-background-color)}.ol-mouse-position{top:8px;right:8px;position:absolute}.ol-scale-line{background:var(--ol-partial-background-color);border-radius:4px;bottom:8px;left:8px;padding:2px;position:absolute}.ol-scale-line-inner{border:1px solid var(--ol-subtle-foreground-color);border-top:none;color:var(--ol-foreground-color);font-size:10px;text-align:center;margin:1px;will-change:contents,width;transition:all .25s}.ol-scale-bar{position:absolute;bottom:8px;left:8px}.ol-scale-bar-inner{display:flex}.ol-scale-step-marker{width:1px;height:15px;background-color:var(--ol-foreground-color);float:right;z-index:10}.ol-scale-step-text{bottom:-5px;font-size:10px;z-index:11}.ol-scale-step-text,.ol-scale-text{position:absolute;color:var(--ol-foreground-color);text-shadow:-1.5px 0 var(--ol-partial-background-color),0 1.5px var(--ol-partial-background-color),1.5px 0 var(--ol-partial-background-color),0 -1.5px var(--ol-partial-background-color)}.ol-scale-text{font-size:12px;text-align:center;bottom:25px}.ol-scale-singlebar{position:relative;height:10px;z-index:9;box-sizing:border-box;border:1px solid var(--ol-foreground-color)}.ol-scale-singlebar-even{background-color:var(--ol-subtle-foreground-color)}.ol-scale-singlebar-odd{background-color:var(--ol-background-color)}.ol-unsupported{display:none}.ol-unselectable,.ol-viewport{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ol-viewport canvas{all:unset;overflow:hidden}.ol-viewport{touch-action:none}.ol-selectable{-webkit-touch-callout:default;-webkit-user-select:text;-moz-user-select:text;user-select:text}.ol-grabbing{cursor:grabbing}.ol-grab{cursor:move;cursor:grab}.ol-control{position:absolute;background-color:var(--ol-subtle-background-color);border-radius:4px}.ol-zoom{top:.5em;left:.5em}.ol-rotate{top:.5em;right:.5em;transition:opacity .25s linear,visibility 0s linear}.ol-rotate.ol-hidden{opacity:0;visibility:hidden;transition:opacity .25s linear,visibility 0s linear .25s}.ol-zoom-extent{top:4.643em;left:.5em}.ol-full-screen{right:.5em;top:.5em}.ol-control button{display:block;margin:1px;padding:0;color:var(--ol-subtle-foreground-color);font-weight:700;text-decoration:none;font-size:inherit;text-align:center;height:1.375em;width:1.375em;line-height:.4em;background-color:var(--ol-background-color);border:none;border-radius:2px}.ol-control button::-moz-focus-inner{border:none;padding:0}.ol-zoom-extent button{line-height:1.4em}.ol-compass{display:block;font-weight:400;will-change:transform}.ol-touch .ol-control button{font-size:1.5em}.ol-touch .ol-zoom-extent{top:5.5em}.ol-control button:focus,.ol-control button:hover{text-decoration:none;outline:1px solid var(--ol-subtle-foreground-color);color:var(--ol-foreground-color)}.ol-zoom .ol-zoom-in{border-radius:2px 2px 0 0}.ol-zoom .ol-zoom-out{border-radius:0 0 2px 2px}.ol-attribution{text-align:right;bottom:.5em;right:.5em;max-width:calc(100% - 1.3em);display:flex;flex-flow:row-reverse;align-items:center}.ol-attribution a{color:var(--ol-subtle-foreground-color);text-decoration:none}.ol-attribution ul{margin:0;padding:1px .5em;color:var(--ol-foreground-color);text-shadow:0 0 2px var(--ol-background-color);font-size:12px}.ol-attribution li{display:inline;list-style:none}.ol-attribution li:not(:last-child):after{content:\\\" \\\"}.ol-attribution img{max-height:2em;max-width:inherit;vertical-align:middle}.ol-attribution button{flex-shrink:0}.ol-attribution.ol-collapsed ul{display:none}.ol-attribution:not(.ol-collapsed){background:var(--ol-partial-background-color)}.ol-attribution.ol-uncollapsible{bottom:0;right:0;border-radius:4px 0 0}.ol-attribution.ol-uncollapsible img{margin-top:-.2em;max-height:1.6em}.ol-attribution.ol-uncollapsible button{display:none}.ol-zoomslider{top:4.5em;left:.5em;height:200px}.ol-zoomslider button{position:relative;height:10px}.ol-touch .ol-zoomslider{top:5.5em}.ol-overviewmap{left:.5em;bottom:.5em}.ol-overviewmap.ol-uncollapsible{bottom:0;left:0;border-radius:0 4px 0 0}.ol-overviewmap .ol-overviewmap-map,.ol-overviewmap button{display:block}.ol-overviewmap .ol-overviewmap-map{border:1px solid var(--ol-subtle-foreground-color);height:150px;width:150px}.ol-overviewmap:not(.ol-collapsed) button{bottom:0;left:0;position:absolute}.ol-overviewmap.ol-collapsed .ol-overviewmap-map,.ol-overviewmap.ol-uncollapsible button{display:none}.ol-overviewmap:not(.ol-collapsed){background:var(--ol-subtle-background-color)}.ol-overviewmap-box{border:1.5px dotted var(--ol-subtle-foreground-color)}.ol-overviewmap .ol-overviewmap-box:hover{cursor:move}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as _VARS_ from './vars.json';\n\nexport const VARS = _VARS_;\n\nexport const EVENT_TYPE = {\n  ADDRESSCHOSEN: 'addresschosen',\n};\n\nexport const CONTROL_TYPE = {\n  NOMINATIM: 'nominatim',\n  REVERSE: 'reverse',\n};\n\nexport const TARGET_TYPE = {\n  GLASS: 'glass-button',\n  INPUT: 'text-input',\n};\n\nexport const FEATURE_SRC = '//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png';\n\nexport const PROVIDERS = {\n  OSM: 'osm',\n  MAPQUEST: 'mapquest',\n  PHOTON: 'photon',\n  BING: 'bing',\n  OPENCAGE: 'opencage',\n};\n\nexport const DEFAULT_OPTIONS = {\n  provider: PROVIDERS.OSM,\n  label: '',\n  placeholder: 'Search for an address',\n  featureStyle: null,\n  targetType: TARGET_TYPE.GLASS,\n  lang: 'en-US',\n  limit: 5,\n  keepOpen: false,\n  preventDefault: false,\n  preventPanning: false,\n  preventMarker: false,\n  defaultFlyResolution: 10, // Meters per pixel\n  debug: false,\n};","export function assert(condition, message = 'Assertion failed') {\n  if (!condition) {\n    if (typeof Error !== 'undefined') throw new Error(message);\n\n    throw message; // Fallback\n  }\n}\n\nexport function now() {\n  // Polyfill for window.performance.now()\n  // @license http://opensource.org/licenses/MIT\n  // copyright Paul Irish 2015\n  // https://gist.github.com/paulirish/5438650\n  if ('performance' in window === false) {\n    window.performance = {};\n  }\n\n  if ('now' in window.performance === false) {\n    let nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    window.performance.now = () => Date.now() - nowOffset;\n  }\n\n  return window.performance.now();\n}\n\nexport function randomId(prefix) {\n  const id = now().toString(36);\n\n  return prefix ? prefix + id : id;\n}\n\nexport function isNumeric(str) {\n  return /^\\d+$/u.test(str);\n}\n\nexport function isEmpty(str) {\n  return !str || str.length === 0;\n}\n\nexport function emptyArray(array) {\n  while (array.length) array.pop();\n}\n\nexport function anyMatchInArray(source, target) {\n  return source.some((each) => target.includes(each));\n}\n\nexport function everyMatchInArray(arr1, arr2) {\n  return arr2.every((each) => arr1.includes(each));\n}\n\nexport function anyItemHasValue(obj, has = false) {\n  const keys = Object.keys(obj);\n\n  keys.forEach((key) => {\n    if (!isEmpty(obj[key])) has = true;\n  });\n\n  return has;\n}","/* eslint-disable prefer-named-capture-group */\nimport {\n  isNumeric\n} from './mix';\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to remove a class.\n */\nexport function addClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => addClass(each, classname));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (!hasClass(element, array[i])) {\n      _addClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to add a class.\n */\nexport function removeClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => removeClass(each, classname, timeout));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (hasClass(element, array[i])) {\n      _removeClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element} element DOM node.\n * @param {String} classname Classname.\n * @return {Boolean}\n */\nexport function hasClass(element, c) {\n  // use native if available\n  return element.classList ? element.classList.contains(c) : classRegex(c).test(element.className);\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String} classname Classe.\n */\nexport function toggleClass(element, classname) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => toggleClass(each, classname));\n\n    return;\n  }\n\n  // use native if available\n  if (element.classList) {\n    element.classList.toggle(classname);\n  } else {\n    hasClass(element, classname) ? _removeClass(element, classname) : _addClass(element, classname);\n  }\n}\n\n/**\n * Abstraction to querySelectorAll for increased\n * performance and greater usability\n * @param {String} selector\n * @param {Element} context (optional)\n * @param {Boolean} findAll (optional)\n * @return (findAll) {Element} : {Array}\n */\nexport function $(id) {\n  id = id[0] === '#' ? id.slice(1, 1 + id.length) : id;\n\n  return document.getElementById(id);\n}\n\nexport function isElement(obj) {\n  // DOM, Level2\n  if ('HTMLElement' in window) {\n    return !!obj && obj instanceof HTMLElement;\n  }\n\n  // Older browsers\n  return !!obj && typeof obj === 'object' && obj.nodeType === 1 && !!obj.nodeName;\n}\n\nexport function getAllChildren(node, tag) {\n  return [].slice.call(node.getElementsByTagName(tag));\n}\n\nexport function removeAllChildren(node) {\n  while (node.firstChild) node.firstChild.remove();\n}\n\nexport function removeAll(collection) {\n  let node;\n\n  while ((node = collection[0])) node.remove();\n}\n\nexport function getChildren(node, tag) {\n  return [].filter.call(node.childNodes, (el) =>\n    tag ? el.nodeType === 1 && el.tagName.toLowerCase() === tag : el.nodeType === 1\n  );\n}\n\nexport function template(html, row) {\n  return html.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu, (htm, key) => {\n    const value = row[key] === undefined ? '' : row[key];\n\n    return htmlEscape(value);\n  });\n}\n\nexport function htmlEscape(str) {\n  return String(str)\n    .replaceAll('&', '&amp;')\n    .replaceAll('<', '&lt;')\n    .replaceAll('>', '&gt;')\n    .replaceAll('\"', '&quot;')\n    .replaceAll(\"'\", '&#039;');\n}\n\nexport function createElement(node, html) {\n  let elem;\n\n  if (Array.isArray(node)) {\n    elem = document.createElement(node[0]);\n\n    if (node[1].id) elem.id = node[1].id;\n\n    if (node[1].classname) elem.className = node[1].classname;\n\n    if (node[1].attr) {\n      const {\n        attr\n      } = node[1];\n\n      if (Array.isArray(attr)) {\n        let i = -1;\n\n        while (++i < attr.length) {\n          elem.setAttribute(attr[i].name, attr[i].value);\n        }\n      } else {\n        elem.setAttribute(attr.name, attr.value);\n      }\n    }\n  } else {\n    elem = document.createElement(node);\n  }\n\n  elem.innerHTML = html;\n\n  const frag = document.createDocumentFragment();\n\n  while (elem.childNodes[0]) frag.append(elem.childNodes[0]);\n\n  elem.append(frag);\n\n  return elem;\n}\n\nfunction classRegex(classname) {\n  return new RegExp(`(^|\\\\s+) ${classname} (\\\\s+|$)`, 'u');\n}\n\nfunction _addClass(el, klass, timeout) {\n  // use native if available\n  if (el.classList) {\n    el.classList.add(klass);\n  } else {\n    el.className = `${el.className} ${klass}`.trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _removeClass(el, klass), timeout);\n  }\n}\n\nfunction _removeClass(el, klass, timeout) {\n  if (el.classList) {\n    el.classList.remove(klass);\n  } else {\n    el.className = el.className.replace(classRegex(klass), ' ').trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _addClass(el, klass), timeout);\n  }\n}","import {\n  VARS,\n  TARGET_TYPE\n} from '../konstants';\n\nimport {\n  createElement\n} from './helpers/dom';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Html\n */\nexport default class Html {\n  /**\n   * @constructor\n   * @param {object} options Options.\n   */\n  constructor(options) {\n    this.options = options;\n    this.els = this.createControl();\n  }\n\n  createControl() {\n    let container;\n    let containerClass;\n    let elements;\n\n    if (this.options.targetType === TARGET_TYPE.INPUT) {\n      containerClass = `${klasses.namespace} ${klasses.inputText.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.input\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.inputText.control}`),\n        label: container.querySelector(`.${klasses.inputText.label}`),\n        input: container.querySelector(`.${klasses.inputText.input}`),\n        search: container.querySelector(`.${klasses.inputText.search}`),\n        result: container.querySelector(`.${klasses.inputText.result}`),\n      };\n      elements.label.innerHTML = this.options.label;\n    } else {\n      containerClass = `${klasses.namespace} ${klasses.glass.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.glass\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.glass.control}`),\n        button: container.querySelector(`.${klasses.glass.button}`),\n        input: container.querySelector(`.${klasses.glass.input}`),\n        search: container.querySelector(`.${klasses.glass.search}`),\n        result: container.querySelector(`.${klasses.glass.result}`),\n      };\n    }\n\n    // set placeholder from options\n    elements.input.placeholder = this.options.placeholder;\n\n    return elements;\n  }\n}\n\nHtml.glass = `\n  <div class=\"${klasses.glass.control} ${klasses.olControl}\">\n    <button type=\"button\" id=\"${VARS.buttonControlId}\" class=\"${klasses.glass.button}\"></button>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <a id=\"${VARS.inputSearchId}\" class=\"${klasses.glass.search} ${klasses.hidden}\"></a>\n  </div>\n  <ul class=\"${klasses.glass.result}\"></ul>\n`;\n\nHtml.input = `\n  <div class=\"${klasses.inputText.control}\">\n    <label type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.label}\"></label>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <span class=\"${klasses.inputText.icon}\"></span>\n    <button type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.search} ${klasses.hidden}\"></button>\n  </div>\n  <ul class=\"${klasses.inputText.result}\"></ul>\n`;","export function json(obj) {\n  return new Promise((resolve, reject) => {\n    const url = encodeUrlXhr(obj.url, obj.data);\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'same-origin',\n    };\n\n    if (obj.jsonp) {\n      jsonp(url, obj.callbackName, resolve);\n    } else {\n      fetch(url, config)\n        .then((r) => r.json())\n        .then(resolve)\n        .catch(reject);\n    }\n  });\n}\n\nfunction toQueryString(obj) {\n  return Object.keys(obj)\n    .reduce((acc, k) => {\n      acc.push(\n        typeof obj[k] === 'object' ?\n        toQueryString(obj[k]) :\n        `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n      );\n\n      return acc;\n    }, [])\n    .join('&');\n}\n\nfunction encodeUrlXhr(url, data) {\n  if (data && typeof data === 'object') {\n    url += (/\\?/u.test(url) ? '&' : '?') + toQueryString(data);\n  }\n\n  return url;\n}\n\nfunction jsonp(url, key, callback) {\n  // https://github.com/Fresheyeball/micro-jsonp/blob/master/src/jsonp.js\n  const {\n    head\n  } = document;\n  const script = document.createElement('script');\n  // generate minimally unique name for callback function\n  const callbackName = `f${Math.round(Math.random() * Date.now())}`;\n\n  // set request url\n  script.setAttribute(\n    'src',\n    // add callback parameter to the url\n    //    where key is the parameter key supplied\n    //    and callbackName is the parameter value\n    `${url + (url.indexOf('?') > 0 ? '&' : '?') + key}=${callbackName}`\n  );\n\n  // place jsonp callback on window,\n  //  the script sent by the server should call this\n  //  function as it was passed as a url parameter\n  window[callbackName] = (data) => {\n    window[callbackName] = undefined;\n\n    // clean up script tag created for request\n    setTimeout(() => head.removeChild(script), 0);\n\n    // hand data back to the user\n    callback(data);\n  };\n\n  // actually make the request\n  head.append(script);\n}","/**\n * @class Photon\n */\nexport default class Photon {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://photon.komoot.io/api/',\n\n      params: {\n        q: '',\n        limit: 10,\n        lang: 'en',\n      },\n\n      langs: ['de', 'it', 'fr', 'en'],\n    };\n  }\n\n  getParameters(options) {\n    options.lang = options.lang.toLowerCase();\n\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        limit: options.limit || this.settings.params.limit,\n\n        lang: this.settings.langs.includes(options.lang) ? options.lang : this.settings.params.lang,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.features.length === 0) return [];\n\n    return results.features.map((result) => ({\n      lon: result.geometry.coordinates[0],\n      lat: result.geometry.coordinates[1],\n\n      address: {\n        name: result.properties.name,\n        postcode: result.properties.postcode,\n        city: result.properties.city,\n        state: result.properties.state,\n        country: result.properties.country,\n      },\n\n      original: {\n        formatted: result.properties.name,\n        details: result.properties,\n      },\n    }));\n  }\n}","/**\n * @class OpenStreet\n */\nexport default class OpenStreet {\n  /**\n   * @constructor\n   */\n  constructor(options) {\n    this.settings = {\n      url: 'https://nominatim.openstreetmap.org/search',\n      ...options, // Allow custom URL for osm provider https://github.com/Dominique92/ol-geocoder/issues/266\n\n      params: {\n        q: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        viewbox: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(opt) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: opt.query,\n        format: this.settings.params.format,\n        addressdetails: this.settings.params.addressdetails,\n        limit: opt.limit || this.settings.params.limit,\n        countrycodes: opt.countrycodes || this.settings.params.countrycodes,\n        viewbox: opt.viewbox || this.settings.params.viewbox,\n        'accept-language': opt.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n      bbox: result.boundingbox,\n\n      address: {\n        name: result.display_name,\n        road: result.address.road || '',\n        houseNumber: result.address.house_number || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class MapQuest\n */\nexport default class MapQuest {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://open.mapquestapi.com/nominatim/v1/search.php',\n\n      params: {\n        q: '',\n        key: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        format: 'json',\n        addressdetails: 1,\n        limit: options.limit || this.settings.params.limit,\n        countrycodes: options.countrycodes || this.settings.params.countrycodes,\n\n        'accept-language': options.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n\n      address: {\n        name: result.address.neighbourhood || '',\n        road: result.address.road || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class Bing\n */\nexport default class Bing {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://dev.virtualearth.net/REST/v1/Locations',\n      callbackName: 'jsonp',\n\n      params: {\n        query: '',\n        key: '',\n        includeNeighborhood: 0,\n        maxResults: 10,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n      callbackName: this.settings.callbackName,\n\n      params: {\n        query: options.query,\n        key: options.key,\n\n        includeNeighborhood: options.includeNeighborhood || this.settings.params.includeNeighborhood,\n\n        maxResults: options.maxResults || this.settings.params.maxResults,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    const {\n      resources\n    } = results.resourceSets[0];\n\n    if (resources.length === 0) return [];\n\n    return resources.map((result) => ({\n      lon: result.point.coordinates[1],\n      lat: result.point.coordinates[0],\n\n      address: {\n        name: result.name,\n      },\n\n      original: {\n        formatted: result.address.formattedAddress,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class OpenCage\n */\nexport default class OpenCage {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://api.opencagedata.com/geocode/v1/json?',\n\n      params: {\n        q: '',\n        key: '',\n        limit: 10,\n        countrycode: '',\n        pretty: 1,\n        no_annotations: 1,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        limit: options.limit || this.settings.params.limit,\n        countrycode: options.countrycodes || this.settings.params.countrycodes,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.results.length === 0) return [];\n\n    return results.results.map((result) => ({\n      lon: result.geometry.lng,\n      lat: result.geometry.lat,\n\n      address: {\n        name: result.components.house_number || '',\n        road: result.components.road || '',\n        postcode: result.components.postcode,\n        city: result.components.city || result.components.town,\n        state: result.components.state,\n        country: result.components.country,\n      },\n\n      original: {\n        formatted: result.formatted,\n        details: result.components,\n      },\n    }));\n  }\n}","import LayerVector from 'ol/layer/Vector';\nimport SourceVector from 'ol/source/Vector';\nimport Point from 'ol/geom/Point';\nimport Feature from 'ol/Feature';\nimport * as proj from 'ol/proj';\n\nimport {\n  VARS,\n  TARGET_TYPE,\n  PROVIDERS,\n  EVENT_TYPE\n} from '../konstants';\nimport {\n  hasClass,\n  addClass,\n  removeClass,\n  createElement,\n  template,\n  removeAllChildren,\n} from './helpers/dom';\nimport {\n  randomId\n} from './helpers/mix';\nimport {\n  json\n} from './helpers/ajax';\n\nimport Photon from './providers/photon';\nimport OpenStreet from './providers/osm';\nimport MapQuest from './providers/mapquest';\nimport Bing from './providers/bing';\nimport OpenCage from './providers/opencage';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Nominatim\n */\nexport default class Nominatim {\n  /**\n   * @constructor\n   * @param {Function} base Base class.\n   */\n  constructor(base, els) {\n    this.Base = base;\n\n    this.layerName = randomId('geocoder-layer-');\n    this.layer = new LayerVector({\n      name: this.layerName,\n      source: new SourceVector(),\n      displayInLayerSwitcher: false, // Remove search layer from legend https://github.com/Dominique92/ol-geocoder/issues/256\n    });\n\n    this.options = base.options;\n    // provider is either the name of a built-in provider as a string or an\n    // object that implements the provider API\n    this.options.provider =\n      typeof this.options.provider === 'string' ?\n      this.options.provider.toLowerCase() :\n      this.options.provider;\n    this.provider = this.newProvider();\n\n    this.els = els;\n    this.lastQuery = '';\n    this.container = this.els.container;\n    this.registeredListeners = {\n      mapClick: false,\n    };\n    this.setListeners();\n  }\n\n  setListeners() {\n    const openSearch = (evt) => {\n      evt.stopPropagation();\n      hasClass(this.els.control, klasses.glass.expanded) ? this.collapse() : this.expand();\n    };\n    const query = (evt) => {\n      const value = evt.target.value.trim();\n      const hit = evt.key ?\n        evt.key === 'Enter' :\n        evt.which ?\n        evt.which === 13 :\n        evt.keyCode ?\n        evt.keyCode === 13 :\n        false;\n\n      if (hit) {\n        evt.preventDefault();\n        this.query(value);\n      }\n    };\n    const stopBubbling = (evt) => evt.stopPropagation();\n    const search = () => {\n      this.els.input.focus();\n      this.query(this.els.input.value);\n    };\n    const handleValue = (evt) => {\n      const value = evt.target.value.trim();\n\n      value.length !== 0 ?\n        removeClass(this.els.search, klasses.hidden) :\n        addClass(this.els.search, klasses.hidden);\n    };\n\n    this.els.input.addEventListener('keypress', query, false);\n    this.els.input.addEventListener('click', stopBubbling, false);\n    this.els.input.addEventListener('input', handleValue, false);\n    this.els.search.addEventListener('click', search, false);\n\n    if (this.options.targetType === TARGET_TYPE.GLASS) {\n      this.els.button.addEventListener('click', openSearch, false);\n    }\n  }\n\n  query(q) {\n    // lazy provider\n    if (!this.provider) {\n      this.provider = this.newProvider();\n    }\n\n    const parameters = this.provider.getParameters({\n      query: q,\n      key: this.options.key,\n      lang: this.options.lang,\n      countrycodes: this.options.countrycodes,\n      viewbox: this.options.viewbox,\n      limit: this.options.limit,\n    });\n\n    if (this.lastQuery === q && this.els.result.firstChild) return;\n\n    this.lastQuery = q;\n    this.clearResults();\n    addClass(this.els.search, klasses.spin);\n\n    const ajax = {\n      url: parameters.url,\n      data: parameters.params,\n    };\n\n    if (parameters.callbackName) {\n      ajax.jsonp = true;\n      ajax.callbackName = parameters.callbackName;\n    }\n\n    json(ajax)\n      .then((res) => {\n        // eslint-disable-next-line no-console\n        this.options.debug && console.info(res);\n\n        removeClass(this.els.search, klasses.spin);\n\n        // will be fullfiled according to provider\n        const res_ = this.provider.handleResponse(res);\n\n        if (res_) {\n          this.createList(res_);\n          this.listenMapClick();\n        }\n      })\n      .catch(() => {\n        removeClass(this.els.search, klasses.spin);\n\n        const li = createElement('li', '<h5>Error! No internet connection?</h5>');\n\n        this.els.result.append(li);\n      });\n  }\n\n  createList(response) {\n    const ul = this.els.result;\n\n    response.forEach((row) => {\n      let addressHtml;\n\n      switch (this.options.provider) {\n        case PROVIDERS.OSM:\n          addressHtml = `<span class=\"${klasses.road}\">${row.address.name}</span>`;\n          break;\n\n        default:\n          addressHtml = this.addressTemplate(row.address);\n      }\n\n      if (response.length == 1) {\n        this.chosen(row, addressHtml, row.address, row.original);\n      } else {\n        const li = createElement('li', `<a href=\"#\">${addressHtml}</a>`);\n\n        li.addEventListener(\n          'click',\n          (evt) => {\n            evt.preventDefault();\n            this.chosen(row, addressHtml, row.address, row.original);\n          },\n          false\n        );\n\n        ul.append(li);\n      }\n    });\n  }\n\n  chosen(place, addressHtml, addressObj, addressOriginal) {\n    const map = this.Base.getMap();\n    const coord_ = [Number.parseFloat(place.lon), Number.parseFloat(place.lat)];\n    const projection = map.getView().getProjection();\n    const coord = proj.transform(coord_, 'EPSG:4326', projection);\n\n    let {\n      bbox\n    } = place;\n\n    if (bbox) {\n      bbox = proj.transformExtent(\n        // https://nominatim.org/release-docs/latest/api/Output/#boundingbox\n        // Requires parseFloat on negative bbox entries\n        [parseFloat(bbox[2]), parseFloat(bbox[0]), parseFloat(bbox[3]), parseFloat(bbox[1])], // SNWE -> WSEN\n        'EPSG:4326',\n        projection\n      );\n    }\n\n    const address = {\n      formatted: addressHtml,\n      details: addressObj,\n      original: addressOriginal,\n    };\n\n    this.options.keepOpen === false && this.clearResults(true);\n\n    if (this.options.preventDefault === true || this.options.preventMarker === true) {\n      // No display change\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    } else {\n      // Display a marker\n      const feature = this.createFeature(coord, address);\n\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        feature,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    }\n\n    if (this.options.preventDefault !== true && this.options.preventPanning !== true) {\n      // Move & zoom to the position\n      if (bbox) {\n        map.getView().fit(bbox, {\n          duration: 500,\n        });\n      } else {\n        map.getView().animate({\n          center: coord,\n          // ol-geocoder results are too much zoomed -in Dominique92/ol-geocoder#235\n          resolution: this.options.defaultFlyResolution,\n          duration: 500,\n        });\n      }\n    }\n  }\n\n  createFeature(coord) {\n    const feature = new Feature(new Point(coord));\n\n    this.addLayer();\n    feature.setStyle(this.options.featureStyle);\n    feature.setId(randomId('geocoder-ft-'));\n    this.getSource().addFeature(feature);\n\n    return feature;\n  }\n\n  addressTemplate(address) {\n    const html = [];\n\n    if (address.name) {\n      html.push(['<span class=\"', klasses.road, '\">{name}</span>'].join(''));\n    }\n\n    if (address.road || address.building || address.house_number) {\n      html.push(\n        ['<span class=\"', klasses.road, '\">{building} {road} {house_number}</span>'].join('')\n      );\n    }\n\n    if (address.city || address.town || address.village) {\n      html.push(\n        ['<span class=\"', klasses.city, '\">{postcode} {city} {town} {village}</span>'].join('')\n      );\n    }\n\n    if (address.state || address.country) {\n      html.push(['<span class=\"', klasses.country, '\">{state} {country}</span>'].join(''));\n    }\n\n    return template(html.join('<br>'), address);\n  }\n\n  newProvider() {\n    switch (this.options.provider) {\n      case PROVIDERS.OSM:\n        return new OpenStreet(this.options);\n      case PROVIDERS.MAPQUEST:\n        return new MapQuest();\n      case PROVIDERS.PHOTON:\n        return new Photon();\n      case PROVIDERS.BING:\n        return new Bing();\n      case PROVIDERS.OPENCAGE:\n        return new OpenCage();\n\n      default:\n        return this.options.provider;\n    }\n  }\n\n  expand() {\n    removeClass(this.els.input, klasses.spin);\n    addClass(this.els.control, klasses.glass.expanded);\n    window.setTimeout(() => this.els.input.focus(), 100);\n    this.listenMapClick();\n  }\n\n  collapse() {\n    this.els.input.value = '';\n    this.els.input.blur();\n    addClass(this.els.search, klasses.hidden);\n    removeClass(this.els.control, klasses.glass.expanded);\n    this.clearResults();\n  }\n\n  listenMapClick() {\n    // already registered\n    if (this.registeredListeners.mapClick) return;\n\n    const that = this;\n    const mapElement = this.Base.getMap().getTargetElement();\n\n    this.registeredListeners.mapClick = true;\n\n    // one-time fire click\n    mapElement.addEventListener(\n      'click', {\n        handleEvent(evt) {\n          that.clearResults(true);\n          mapElement.removeEventListener(evt.type, this, false);\n          that.registeredListeners.mapClick = false;\n        },\n      },\n      false\n    );\n  }\n\n  clearResults(collapse) {\n    collapse && this.options.targetType === TARGET_TYPE.GLASS ?\n      this.collapse() :\n      removeAllChildren(this.els.result);\n  }\n\n  getSource() {\n    return this.layer.getSource();\n  }\n\n  addLayer() {\n    let found = false;\n\n    const map = this.Base.getMap();\n\n    map.getLayers().forEach((layer) => {\n      if (layer === this.layer) found = true;\n    });\n\n    if (!found) map.addLayer(this.layer);\n  }\n}","import Control from 'ol/control/Control';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\n\nimport {\n  CONTROL_TYPE,\n  DEFAULT_OPTIONS,\n  FEATURE_SRC\n} from '../konstants';\n\nimport Html from './html';\nimport Nominatim from './nominatim';\nimport {\n  assert,\n} from './helpers/mix';\n\n/**\n * @class Base\n * @extends {ol.control.Control}\n */\nexport default class Base extends Control {\n  /**\n   * @constructor\n   * @param {string} type nominatim|reverse.\n   * @param {object} options Options.\n   */\n  constructor(type = CONTROL_TYPE.NOMINATIM, opt) {\n    assert(typeof type === 'string', '@param `type` should be string!');\n    assert(\n      type === CONTROL_TYPE.NOMINATIM || type === CONTROL_TYPE.REVERSE,\n      `@param 'type' should be '${CONTROL_TYPE.NOMINATIM}'\n      or '${CONTROL_TYPE.REVERSE}'!`\n    );\n    const options = {\n      ...DEFAULT_OPTIONS,\n      featureStyle: [\n        new Style({\n          image: new Icon({\n            scale: 0.7,\n            src: FEATURE_SRC\n          })\n        }),\n      ],\n      ...opt,\n    };\n\n    let container;\n    let $nominatim;\n    const $html = new Html(options);\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      container = $html.els.container;\n    }\n\n    super({\n      element: container,\n      ...options, // Allows to add ol.control.Control options (as target:)\n    });\n\n    if (!(this instanceof Base)) return new Base();\n\n    this.options = options;\n    this.container = container;\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      $nominatim = new Nominatim(this, $html.els);\n      this.layer = $nominatim.layer;\n    }\n  }\n\n  /**\n   * @return {ol.layer.Vector} Returns the layer created by this control\n   */\n  getLayer() {\n    return this.layer;\n  }\n\n  /**\n   * @return {ol.source.Vector} Returns the source created by this control\n   */\n  getSource() {\n    return this.getLayer().getSource();\n  }\n\n  /**\n   * Set a new provider\n   * @param {String} provider\n   */\n  setProvider(provider) {\n    this.options.provider = provider;\n  }\n\n  /**\n   * Set provider key\n   * @param {String} key\n   */\n  setProviderKey(key) {\n    this.options.key = key;\n  }\n}","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[1]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[2]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[3]!./ol-geocoder.min.css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2a480e2a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=style&index=1&id=0aba4292&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7815bd1a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[3]!./ol.css?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7dd8b254\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","is_small","map_baselayer","style","ref","directives","name","rawName","value","clicked_location","module","$slots","hasOwnProperty","expression","key","latitude","longitude","attrs","on","closePopup","$path","_e","domProps","_s","popup_message","_t","$root","app_infos","is_electron","getCurrentPosition","zoomIn","zoomOut","toggleSearch","_l","draw_mode","current_draw_mode","$event","toggleTool","icon","svg","_v","label","$t","start_map_print","map","draw_can_be_finished","finishDrawing","selected_feature","get","opened_view_color","updateDrawing","prop","val","includes","selected_feature_type","removeSelected","staticRenderFns","IDLE","LOADING","LOADED","ERROR","EMPTY","Tile","EventTarget","constructor","tileCoord","state","options","super","interimTile","transition_","undefined","transition","transitionStarts_","interpolate","changed","dispatchEvent","EventType","release","TileState","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","Error","load","abstract","getAlpha","id","time","start","delta","easeIn","inTransition","endTransition","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","element","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","listenImage","bind","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","getTransform","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","canWrapX","getExtent","getWidth","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","getTopLeft","destinationTopRight","getTopRight","destinationBottomRight","getBottomRight","destinationBottomLeft","getBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","Math","max","ceil","log2","getArea","addQuad_","leftBound","Infinity","forEach","triangle","i","arr","min","source","newTriangle","minX","maxX","addTriangle_","a","b","aSrc","bSrc","cSrc","push","target","d","dSrc","sourceQuadExtent","boundingExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","isFinite","intersects","isNotFinite","center","centerSrc","dx","centerSrcEstimX","modulo","dy","centerSrcErrorSquared","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","extent","createEmpty","extendCoordinate","getTriangles","brokenDiagonalRendering_","canvasPool","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","verifyBrokenDiagonalRendering","data","offset","isBrokenDiagonalRendering","globalCompositeOperation","getImageData","releaseCanvas","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","transform","sourceResolution","getPointResolution","targetMetersPerUnit","getMetersPerUnit","sourceMetersPerUnit","sourceExtent","containsCoordinate","compensationFactor","calculateSourceExtentResolution","getCenter","forEachCorner","corner","width","height","pixelRatio","triangulation","sources","gutter","renderEdges","context","round","imageSmoothingEnabled","length","pixelRound","scale","sourceDataExtent","extend","canvasWidthInUnits","canvasHeightInUnits","getHeight","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","x0","y0","x1","y1","x2","y2","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","getIntersection","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","clamp","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","minY","maxY","reproject_","z","size","getTileSize","renderReprojected","leftToLoad","sourceListenKey","listen","e","unlistenByKey","unlistenSources_","setTimeout","getContext","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","f","entry","value_","key_","newer","assert","older","remove","getKeys","keys","Array","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","set","setSize","createOrUpdate","x","y","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","TileCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileRange","contains","containsTileRange","equals","getSize","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","minZoom","resolutions_","resolutions","isSorted","origins","ii","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","DEFAULT_TILE_SIZE","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","callback","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","floor","createOrUpdateTileRange","getOrigin","getResolutions","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","pow","getTileCoordForXYAndZ_","getTileCoordCenter","resolution","toSize","getTileCoordForCoordAndResolution","coordinate","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","linearFindNearest","tileCoordIntersectsViewport","viewport","intersectsLinearRing","fullTileRanges","getForProjection","projection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","getProjection","gridOptions","maxResolution","DEFAULT_MAX_ZOOM","half","METERS_PER_UNIT","TileSource","Source","attributions","attributionsCollapsible","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","getWrapX","refresh","updateCacheSize","tileCount","useTile","TileSourceEvent","Event","type","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","tileCoordHash","index","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","String","fromCharCode","stop","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","prototype","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","getUrls","handleTileChange","event","uid","getUid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","addEventListener","getTileInternal","cache","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","STADIA_ATTRIBUTION","OMT_ATTRIBUTION","STAMEN_ATTRIBUTION","LayerConfig","extension","ProviderConfig","retina","StadiaMaps","layer","indexOf","provider","slice","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","startsWith","splice","appendParams","uri","params","keyParams","k","encodeURIComponent","qs","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","layer_","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","assign","m","p","toLowerCase","localContext","getMatrixId","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","rotation","makeInverse","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","call","translatedCoordinate","offsets","layerStates","layerStatesArray","numLayers","matches","tmpCoord","layerState","hasRenderer","inView","layerRenderer","getRenderer","getSource","coordinates","order","distanceSq","sort","some","hasFeatureAtCoordinate","hasFeature","TRUE","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","position","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","RenderEvent","disposeInternal","parentNode","removeChild","display","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","replaceChildren","layers","renderDeclutter","GroupEvent","Property","LAYERS","LayerGroup","BaseLayer","baseOptions","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","isArray","Collection","unique","getArray","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","minResolution","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","TileQueue","tilePriorityFunction","tileChangeCallback","apply","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","appendChild","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","setZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","BaseObject","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","setMap","pan","currentCenter","getCenterInternal","animateInternal","linear","getConstrainedCenter","zoomByDelta","anchor","newResolution","getResolutionForZoom","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","pointerEvents","all","var_args","conditions","arguments","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","WEBKIT","MAC","never","FALSE","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","endInteraction","DragRotate","lastAngle_","getConstraints","disable","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","setCoordinates","Polygon","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","clone","fitInternal","LEFT","UP","RIGHT","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Date","now","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","View","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getOverlayContainerStopEvent","ownerDocument","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","cont","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","MapEventType","resolveConstraints","dispose","removeNode","unobserve","ShadowRoot","host","getElementById","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","moveStart","equalsExtent","createOrUpdateEmpty","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","getData","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","layerExtent","getRenderSource","tileOrigin","col","row","loadedTileCallback","tiles","prepareFrame","viewResolution","viewCenter","sourceRevision","getRevision","fromUserExtent","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","getRotatedViewport","childTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","preRender","clips","clipZs","currentClip","zs","ascending","reverse","currentZ","currentTilePixelSize","currentResolution","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","contextSaved","drawTileImage","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","tileCallback","TileLayer","createRenderer","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","loadImage","ImageState","imageExtent","img","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","getPixelRatio","clipped","intersectsExtent","containsExtent","dw","dh","previousAlpha","ImageLayer","fromResolutionLike","ReprojImage","ImageWrapper","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","ImageSource","loader","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","setResolutions","findNearestResolution","idx","getImageInternal","requestExtent","getRequestExtent","requestResolution","handleImageChange","defaultImageLoadFunction","ratio","viewWidth","viewHeight","marginWidth","requestWidth","marginHeight","requestHeight","createLoader","decode","resolutionX","resolutionY","Static","imageLoadFunction","url_","imageExtent_","getImageExtent","getUrl","WMTSTileGrid","matrixIds_","matrixIds","getMatrixIds","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","CLASS_SELECTABLE","autoPan","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","outerWidth","outerHeight","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","animation","box","offsetX","pageXOffset","offsetY","pageYOffset","setVisible","mapSize","updateRenderedPosition","posX","posY","getOptions","interpolatePoint","flatCoordinates","stride","fraction","dimension","o","t","cumulativeLengths","binarySearch","NaN","lerp","lineStringCoordinateAtM","extrapolate","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","LineString","SimpleGeometry","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","maxSquaredDelta","assignClosestPoint","forEachSegment","getCoordinateAtM","getCoordinates","inflateCoordinates","getCoordinateAt","getLength","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","getType","intersectsLineString","setLayout","deflateCoordinates","Circle","radius","setCenterAndRadius","circle","squaredDistance","getRadius","getRadiusSquared_","computeExtent","circleExtent","intersectsCoordinate","setCenter","deflateCoordinate","setRadius","getStride","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","removeChangeListener","listeners","CLASS_UNSUPPORTED","body","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","scaleBarText_","text","dpi_","dpi","getUnits","setDpi","pointResolutionUnits","pointResolution","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","createScaleBar","toFixed","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","scaleBarText","isLast","lengthString","inchesPerMeter","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","sx","sy","transformFn","clonedGeometries","MultiLineString","ends_","getLayout","lineStrings","getFlatCoordinates","appendLineString","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","inflateCoordinatesArray","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","deflateCoordinatesArray","MultiPoint","appendPoint","point","multiPoint","squaredDx","getPoint","Point","getPoints","points","linearRingss","endss","flatCenters","createOrUpdateFromFlatCoordinates","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","linearRingssContainsXY","linearRingssArea","right","orientLinearRingsArray","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","sd","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","along","ring","newTarget","considerBothDirections","newCoordinate","startPx","forwardDistance","reverseDistance","sharedRel","py","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","geometryFunction","mode","squaredLength","squaredCoordinateDistance","userProjection","getUserProjection","Constructor","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","VectorLayer","VectorSource","useSpatialIndex","getDefaultStyleFunction","updateWhileInteracting","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","lowerLeft","upperRight","getFeaturesInExtent","addOrRemoveTracedCoordinates_","previouslyForward","currentlyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","updatedTraceTarget","oldTarget","tracing","startingToDraw","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","Feature","updateSketchFeatures_","createOrUpdateCustomSketchLine_","getLinearRing","sketchLineGeom","setGeometry","getStrideForLayout","setGeometryName","last","done","removeLastPoint","sketchFeature","abortDrawing_","addFeature","newDrawing","shift","ending","sketchFeatures","overlaySource","addFeatures","styles","createEditingStyle","SnapEventType","SNAP","SnapEvent","vertex","vertexPixel","getFeatureFromEvent","evt","tempSegment","Snap","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelTolerance_","pixelTolerance","rBush_","RBush","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","register","feature_uid","segmenter","segments","insert","segment","extents","s","segmentsData","handleFeatureChange_","getFeatures_","getFeatures","snapTo","handleFeatureAdd_","handleFeatureRemove_","removeFeature","updateFeature_","featuresToUpdate","unlisten","unregister","rBush","nodesToRemove","forEachInExtent","node","currentMap","VectorEventType","pixelCoordinate","projectedCoordinate","toUserExtent","buffer","getInExtent","segmentsLength","closestVertex","closestFeature","squaredPixelTolerance","getResult","squaredPixelDistance","segmentData","tempVertexCoord","circleGeometry","closestOnCircle","segmentStart","segmentEnd","closestOnSegment","fromCircle","lines","kk","rings","SelectEventType","SELECT","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","find","setStyle","lastIndexOf","removeFeatureLayerAssociation_","item","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","startCoordinate","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","geom","elem","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","snappedToVertex_","changingFeature_","dragSegments_","updateWhileAnimating","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeatureSegmentData_","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createExtent","createOrUpdateVertexFeature_","vertexFeature","getInteracting","removePoint","dragSegment","coordinateDistance","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","coordinatesEqual","closestOnSegmentData","insertVertex_","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","viewExtent","bufferExtent","closestSegment","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removed","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","squaredDistanceToSegment","getClosestPoint","ol_filter_Base","ol_Object","_listener","precompose_","precompose","postcompose_","postcompose","filterRedraw_","addFilter_","filters_","addToLayer","listener","removeFilter_","removeFromLayer","ol_Observable_unByKey","removeFilter","ol_Map","addFilter","console","getFilters","ol_layer_Base","ol_filter_CSS","_layers","setBlend","blend","setFilter","setDisplay","props","pins","start_zoom","default","map_baselayer_bw","map_baselayer_opacity","map_base_media","show_scale","opened_pin_path","can_click","can_edit","components","PrintMap","is_looking_for_gps_coords","pin_features","line_features","mouse_feature","current_zoom","current_view","mouse_coords","map_modify","map_draw","map_snap","pins_vector_source","lines_vector_source","draw_vector_source","show_segments_length","draw_modes","olType","idleTip","activeTip","map_select_mode","selected_feature_id","map_translate","i18n","messages","fr","select","mouse_position","search_for_a_place","click_to_start_drawing","click_to_continue_drawing","click_drag_to_draw_line","click_to_place_center","click_to_define_circle_radius","click_to_place_first_point","finish_drawing","or_double_click","drag_to_modify","select_by_clicking","move_drawing","en","created","mounted","beforeDestroy","watch","handler","deep","JSON","keep_loc_and_zoom","computed","map_styles","default_pin_svg","methods","startMap","olProj","background_layer","lang","placeholder","limit","keepOpen","geocoder","bbox","fit","padding","enableHighAccuracy","maximumAge","error","navigator","printMap","createViewAndBackgroundLayer","$media_filename","code","showFullExtent","enableRotation","createSource","noWrap","makePointStyle","fill_color","fill","color","font","textAlign","textBaseline","anchorXUnits","anchorYUnits","makeDefaultFontString","makeLineStyle","lineDash","modifyStyle","backgroundFill","translateStyle","makeGeomStyle","tip","is_selected","tipStyle","makePointerStyle","resetClickedLocation","navigateTo","openPin","openFeature","startDrawMode","new_feature","makeRandomIdForShape","disableTools","setBackgroundLayerOptions","saveGeom","convertFeaturesToStr","obj","acc","loadPins","feature_cont","loadLines","loadGeom","endDraw","startSelectMode","startTranslate","endTranslate","startModify","endModify","endSelectMode","keyPressed","___CSS_LOADER_EXPORT___","VARS","EVENT_TYPE","CONTROL_TYPE","TARGET_TYPE","PROVIDERS","DEFAULT_OPTIONS","featureStyle","targetType","preventPanning","preventMarker","defaultFlyResolution","debug","message","randomId","prefix","performance","nowOffset","timing","navigationStart","isNumeric","str","test","addClass","classname","each","hasClass","_addClass","removeClass","_removeClass","classRegex","htm","replaceAll","attr","frag","createDocumentFragment","append","RegExp","el","klass","trim","klasses","Html","els","createControl","containerClass","namespace","inputText","containerId","input","querySelector","search","glass","json","Promise","resolve","reject","toQueryString","config","method","credentials","jsonp","head","script","callbackName","random","fetch","r","catch","reduce","olControl","buttonControlId","inputQueryId","inputSearchId","hidden","Photon","settings","q","langs","getParameters","handleResponse","results","lon","lat","address","properties","postcode","city","country","original","formatted","details","OpenStreet","addressdetails","countrycodes","viewbox","opt","boundingbox","display_name","road","houseNumber","house_number","town","MapQuest","neighbourhood","Bing","includeNeighborhood","maxResults","resources","resourceSets","formattedAddress","OpenCage","countrycode","pretty","no_annotations","lng","Nominatim","base","Base","layerName","LayerVector","SourceVector","displayInLayerSwitcher","newProvider","lastQuery","registeredListeners","mapClick","setListeners","openSearch","expanded","collapse","expand","which","keyCode","parameters","clearResults","spin","ajax","info","res_","createList","listenMapClick","li","response","ul","addressHtml","addressTemplate","chosen","place","addressObj","addressOriginal","coord_","coord","transformExtent","createFeature","setId","building","village","blur","that","mapElement","found","Style","Icon","$nominatim","$html","setProvider","setProviderKey","exports","l","exp","u","_maxEntries","_minEntries","children","leaf","_all","toBBox","collides","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","content","__esModule","locals","LENGTH","CollectionEvent","unique_","array_","assertUnique_","updateLength_","insertAt","removeAt","setAt","except","ADD","REMOVE","disposed","geometryOrProperties","id_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","hasProperties","getProperties","getGeometryName","getStyleFunction","handleGeometryChange_","createStyleFunction","getZIndex","stateOrLoader","toPromise","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","finally","setResolution","loadHandler","errorHandler","listening","decoding","listenOnce","IMAGE_DECODE","handleLoad","handleError","decodeFallback","CREATE_IMAGE_BITMAP","createImageBitmap","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","ObjectEvent","oldValue","Observable","values_","getPropertiesInternal","notify","silent","unset","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","ol_key","unByKey","CENTER","RESOLUTION","ROTATION","onlyCenter","smooth","isMoving","centerShift","shiftX","shiftY","none","getViewportClampedResolution","maxExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","padding_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","complete","inAndOut","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","addCoordinate","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","geometryOrExtent","polygonFromExtent","cosAngle","sinAngle","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","VOID","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","constrainRotation","createSnapToZero","rotationNone","createSnapToN","ANIMATING","INTERACTING","haystack","needle","comparator","cmp","low","high","candidate","reverseSubArray","tmp","arr1","arr2","len1","func","strict","compare","every","currentVal","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","rgb","fromString","MAX_CACHE_SIZE","fromStringInternal_","asArray","g","hasAlpha","substr","normalize","asColorLike","levels","level","target_","coordinate1","coordinate2","coord1","coord2","getWorldsAway","sourceExtentWidth","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","lastChild","oldChildren","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listenersForType","isString","dispatching","pendingRemovals","propagate","pr","getListeners","_boundingExtentXYs","xs","ys","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","extendFlatCoordinates","extendXY","area","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","stops","wrapAndSliceX","UNKNOWN","INTERSECTING","ABOVE","BELOW","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","getter","promiseGetter","err","tmpTransform","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","simplify","destination","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","LinearRing","linearRingArea","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","linearRingsContainsXY","linearRingsArea","orientLinearRings","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRings","linearRings","linearRingsAreOriented","quantizeArray","intersectsLinearRingArray","fromExtent","sides","arrayLength","makeRegular","startAngle","getFirstCoordinate","getLastCoordinate","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","assignClosest","offset1","offset2","squaredDelta","isRing","tmpPoint","linearRingContainsExtent","outside","linearRingContainsXY","wn","coordinatess","coordinatesss","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","coordinatesExtent","point1","point2","linearRingIsClockwise","isClockwise","reverseCoordinates","ret","simplifiedOffset","markers","stack","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","ua","userAgent","SAFARI","devicePixelRatio","WorkerGlobalScope","self","background_","background","LayerProperty","className_","state_","getClassName","getOpacity","getVisible","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","handleSourcePropertyChange_","setSource","handleSourceChange_","isVisible","getMapInternal","renderEvent","arrayLayerState","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","parse","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","atan","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","setFill","setStroke","setText","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","Text","setBackgroundFill","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","setTextAlign","justify","setJustify","setTextBaseline","setPadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","setDisplacement","setAnchor","pointsName","requireNumber","radius1","radius2","shape","RegularShape","evaluateRadius","requireColorLike","requireNumberArray","requireSizeLike","property","RENDER_ORDER","BaseVectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","createDefaultStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","beg","saveTextStates_","backgroundStroke","defaultPadding","p0","p1","p2","p3","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","getPixelIndexArray","imageData","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","imageState","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","hasRenderListeners","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","replayGroupInstructions","getOverlaps","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","global","worldExtent","cosh","PROJECTIONS","fromEPSG4326","output","toEPSG4326","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolutionFunc","projUnits","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","destProj","fromLonLat","toLonLat","lonLat","equalUnits","transformFunc","destinationProjection","getTransformFunc","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","transformed","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","setWorldExtent","setGetPointResolution","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","retries","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","pixelContext","createPixelContext","pixelContext_","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","VectorSourceEvent","loader_","strategy_","strategy","allStrategy","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","featureChangeKeys","setLoader","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","maxEntries","rbush_","RBush_","items_","items","forEach_","rbush","CircleStyle","displacement","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","cacheKey","iconImage","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","getIconImage","offset_","offsetOrigin_","initialOptions_","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","colorString","shared","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","ee","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","white","blue","DEFAULT_FILL_COLOR","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","create","setFromArray","transform1","transform2","compose","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid"],"sourceRoot":""}